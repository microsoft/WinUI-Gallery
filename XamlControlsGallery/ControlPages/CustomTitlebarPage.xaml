<!--
    //*********************************************************
    //
    // Copyright (c) Microsoft. All rights reserved.
    // THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
    // ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
    // IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
    // PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
    //
    //*********************************************************
-->

<Page
    x:Class="AppUIBasics.ControlPages.CustomTitlebarPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:AppUIBasics"
    xmlns:data="using:AppUIBasics.Data"
    xmlns:wuxdata="using:Microsoft.UI.Xaml.Data"
    mc:Ignorable="d">

    <Page.Resources>
        <x:Double x:Key="SwatchSize">32</x:Double>
    </Page.Resources>
    
    <StackPanel>
        <local:ControlExample HeaderText="User defined UIElement as custom titlebar for the window"
                              CSharpSource="Window\CustomTitlebar\CustomTitlebarSample1.txt">
            <local:ControlExample.Example>
                <StackPanel Orientation="Vertical" Spacing="10">
                    <TextBlock TextWrapping="WrapWholeWords">
                        User can set a top-level UIElement (defined as appTitlebar here) as titlebar for the window. The system titlebar disappears and the chosen uielement starts acting like the titlebar. <LineBreak></LineBreak>
                        The Background and Foreground Color dropdowns set the foreground and background of titlebar and caption buttons respectively.
                    </TextBlock>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Top" Spacing="10">
                            <Button x:Name="customTitlebar" Click="customTitlebar_Click"></Button>
                        <TextBlock> Background Color </TextBlock>
                        <SplitButton x:Name="myBgColorButton" AutomationProperties.Name="Background color" Padding="0" MinHeight="0" MinWidth="0" VerticalAlignment="Top">
                            <Border x:Name="BackgroundColorElement" Width="{StaticResource SwatchSize}"
                                    Height="{StaticResource SwatchSize}" Background="Transparent" Margin="0" CornerRadius="4,0,0,4"/>
                            <SplitButton.Flyout>
                                <Flyout Placement="Auto">
                                    <GridView>
                                        <GridView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <ItemsWrapGrid MaximumRowsOrColumns="3" Orientation="Horizontal"/>
                                            </ItemsPanelTemplate>
                                        </GridView.ItemsPanel>
                                        <GridView.Resources>
                                            <Style TargetType="Rectangle">
                                                <Setter Property="Width" Value="{StaticResource SwatchSize}"/>
                                                <Setter Property="Height" Value="{StaticResource SwatchSize}"/>
                                                <Setter Property="RadiusX" Value="4"/>
                                                <Setter Property="RadiusY" Value="4"/>
                                            </Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Padding" Value="0"/>
                                                <Setter Property="MinWidth" Value="0"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                                <Setter Property="Margin" Value="6"/>
                                                <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}"/>
                                            </Style>
                                        </GridView.Resources>
                                        <GridView.Items>
                                            <Button Click="BgColorButton_Click" AutomationProperties.Name="Transparent">
                                                <Button.Content>
                                                    <Rectangle Fill="Transparent"/>
                                                </Button.Content>
                                            </Button>
                                            <Button Click="BgColorButton_Click" AutomationProperties.Name="Red">
                                                <Button.Content>
                                                    <Rectangle Fill="Red"/>
                                                </Button.Content>
                                            </Button>
                                            <Button Click="BgColorButton_Click" AutomationProperties.Name="Orange">
                                                <Button.Content>
                                                    <Rectangle Fill="Orange"/>
                                                </Button.Content>
                                            </Button>
                                            <Button Click="BgColorButton_Click" AutomationProperties.Name="Yellow">
                                                <Button.Content>
                                                    <Rectangle Fill="Yellow"/>
                                                </Button.Content>
                                            </Button>
                                            <Button Click="BgColorButton_Click" AutomationProperties.Name="Green">
                                                <Button.Content>
                                                    <Rectangle Fill="Green"/>
                                                </Button.Content>
                                            </Button>
                                            <Button Click="BgColorButton_Click" AutomationProperties.Name="Blue">
                                                <Button.Content>
                                                    <Rectangle Fill="Blue"/>
                                                </Button.Content>
                                            </Button>
                                            <Button Click="BgColorButton_Click" AutomationProperties.Name="Indigo">
                                                <Button.Content>
                                                    <Rectangle Fill="White"/>
                                                </Button.Content>
                                            </Button>
                                            <Button Click="BgColorButton_Click" AutomationProperties.Name="Violet">
                                                <Button.Content>
                                                    <Rectangle Fill="Black"/>
                                                </Button.Content>
                                            </Button>
                                        </GridView.Items>
                                    </GridView>

                                </Flyout>
                            </SplitButton.Flyout>
                        </SplitButton>
                         
                        <TextBlock> Foreground Color</TextBlock>
                        <SplitButton x:Name="myFgColorButton" AutomationProperties.Name="Foreground color" Padding="0" MinHeight="0" MinWidth="0" VerticalAlignment="Top">
                            <Border x:Name="ForegroundColorElement" Width="{StaticResource SwatchSize}" Height="{StaticResource SwatchSize}" Background="Black" Margin="0" CornerRadius="4,0,0,4"/>
                            <SplitButton.Flyout>
                                <Flyout Placement="Auto">
                                    <GridView>
                                        <GridView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <ItemsWrapGrid MaximumRowsOrColumns="3" Orientation="Horizontal"/>
                                            </ItemsPanelTemplate>
                                        </GridView.ItemsPanel>
                                        <GridView.Resources>
                                            <Style TargetType="Rectangle">
                                                <Setter Property="Width" Value="{StaticResource SwatchSize}"/>
                                                <Setter Property="Height" Value="{StaticResource SwatchSize}"/>
                                                <Setter Property="RadiusX" Value="4"/>
                                                <Setter Property="RadiusY" Value="4"/>
                                            </Style>
                                            <Style TargetType="Button">
                                                <Setter Property="Padding" Value="0"/>
                                                <Setter Property="MinWidth" Value="0"/>
                                                <Setter Property="MinHeight" Value="0"/>
                                                <Setter Property="Margin" Value="6"/>
                                                <Setter Property="CornerRadius" Value="{StaticResource ControlCornerRadius}"/>
                                            </Style>
                                        </GridView.Resources>
                                        <GridView.Items>
                                            <Button Click="FgColorButton_Click" AutomationProperties.Name="Transparent">
                                                <Button.Content>
                                                    <Rectangle Fill="Transparent"/>
                                                </Button.Content>
                                            </Button>
                                            <Button Click="FgColorButton_Click" AutomationProperties.Name="Red">
                                                <Button.Content>
                                                    <Rectangle Fill="Red"/>
                                                </Button.Content>
                                            </Button>
                                            <Button Click="FgColorButton_Click" AutomationProperties.Name="Orange">
                                                <Button.Content>
                                                    <Rectangle Fill="Orange"/>
                                                </Button.Content>
                                            </Button>
                                            <Button Click="FgColorButton_Click" AutomationProperties.Name="Yellow">
                                                <Button.Content>
                                                    <Rectangle Fill="Yellow"/>
                                                </Button.Content>
                                            </Button>
                                            <Button Click="FgColorButton_Click" AutomationProperties.Name="Green">
                                                <Button.Content>
                                                    <Rectangle Fill="Green"/>
                                                </Button.Content>
                                            </Button>
                                            <Button Click="FgColorButton_Click" AutomationProperties.Name="Blue">
                                                <Button.Content>
                                                    <Rectangle Fill="Blue"/>
                                                </Button.Content>
                                            </Button>
                                            <Button Click="FgColorButton_Click" AutomationProperties.Name="Indigo">
                                                <Button.Content>
                                                    <Rectangle Fill="White"/>
                                                </Button.Content>
                                            </Button>
                                            <Button Click="FgColorButton_Click" AutomationProperties.Name="Violet">
                                                <Button.Content>
                                                    <Rectangle Fill="Black"/>
                                                </Button.Content>
                                            </Button>
                                        </GridView.Items>
                                    </GridView>

                                </Flyout>
                            </SplitButton.Flyout>
                        </SplitButton>

                    </StackPanel>
                </StackPanel>
                </local:ControlExample.Example>

        </local:ControlExample>
        <local:ControlExample HeaderText="Fallback titlebar when no user defined titlebar is set"
                              CSharpSource="Window\CustomTitlebar\CustomTitlebarSample2.txt">
            <local:ControlExample.Example>
                <StackPanel Orientation="Vertical" Spacing="10">
                    <TextBlock TextWrapping="WrapWholeWords">
                        WinUI provides a fallback titlebar in case where user doesn't want to provide a uielement for setting the titlebar.
                        A small horizontal section next to min/max/close caption buttons is chosen as the fallback titlebar.
                         <LineBreak></LineBreak>
                        It can be applied by just calling ExtendsContentIntoTitleBar api only and not calling SetTitlebar afterwards. It can also be manually triggered by calling SetTitlebar api with null arument.
                        <LineBreak></LineBreak>
                        Use the Color dropdown controls in the section above to change color of the fallback titlebar.
                    </TextBlock>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" VerticalAlignment="Top" Spacing="20">
                        <Button x:Name="defaultTitlebar" Click="defaultTitlebar_Click"></Button>
                    </StackPanel>
                </StackPanel>
            </local:ControlExample.Example>
        </local:ControlExample>
    </StackPanel>
</Page>
