<Page
    x:Class="AppUIBasics.ControlPages.AnimatedIconPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:local="using:AppUIBasics"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    mc:Ignorable="d">
    <StackPanel>
       <local:ControlExample x:Name="AnimatedIconExample1" HeaderText="Adding AnimatedIcon to a button"
            XamlSource="Icons/AnimatedIconSample1_xaml.txt" CSharpSource="Icons/AnimatedIconSample1_cs.txt">
            <local:ControlExample.Example>
                <StackPanel>
                    <TextBlock TextWrapping="WrapWholeWords">
                        The following example is a button that the user clicks to load a search experience. The AnimatedIcon consumes the animation created using 
                        Adobe AfterEffects and translated into Windows.UI.Composition objects using 
                        <Hyperlink NavigateUri="https://aka.ms/lottie">
                           Lottie-Windows
                        </Hyperlink>.
                        For guidance on how to properly structure your animation file see the AnimatedIcon Guidance page.<LineBreak></LineBreak>
                    </TextBlock>
                    <Button PointerEntered="Button_PointerEntered" PointerExited="Button_PointerExited" Width="75">
                        <muxc:AnimatedIcon x:Name="SearchAnimatedIcon">
                            <muxc:AnimatedIcon.Source>
                                <animatedvisuals:AnimatedFindVisualSource/>
                            </muxc:AnimatedIcon.Source>
                            <muxc:AnimatedIcon.FallbackIconSource>
                                <muxc:SymbolIconSource Symbol="Find"/>
                            </muxc:AnimatedIcon.FallbackIconSource>
                        </muxc:AnimatedIcon>
                    </Button>
                </StackPanel>
            </local:ControlExample.Example>
        </local:ControlExample>
        <local:ControlExample x:Name="AnimatedIconExample2" HeaderText="Adding AnimatedIcon to a NavigationView" XamlSource="Icons/AnimatedIconSample2_xaml.txt">
            <local:ControlExample.Example>
                <StackPanel>
                    <TextBlock TextWrapping="WrapWholeWords">
                        If you set an AnimatedIcon as the value of the Icon property, the NavigationViewItem will set the states of the AnimatedIcon for you, according to the states of the control. For guidance on how to properly structure your animation file see the AnimatedIcon Guidance page. <LineBreak></LineBreak><LineBreak></LineBreak>For this example, this sets a custom animation GameSettingsIcon that was generated by the LottieGen tool.<LineBreak></LineBreak><LineBreak></LineBreak>
                    </TextBlock>
                    <muxc:NavigationView IsSettingsVisible="False">
                        <muxc:NavigationView.MenuItems>
                            <muxc:NavigationViewItem Content = "Game Settings">
                                <muxc:NavigationViewItem.Icon>
                                    <muxc:AnimatedIcon x:Name='GameSettingsIcon'>
                                        <muxc:AnimatedIcon.Source>
                                            <animatedvisuals:AnimatedSettingsVisualSource/>
                                        </muxc:AnimatedIcon.Source>
                                        <muxc:AnimatedIcon.FallbackIconSource>
                                            <muxc:FontIconSource FontFamily="Segoe MDL2 Assets" Glyph="&#xE713;"/>
                                        </muxc:AnimatedIcon.FallbackIconSource>
                                    </muxc:AnimatedIcon>
                                </muxc:NavigationViewItem.Icon>
                            </muxc:NavigationViewItem>
                        </muxc:NavigationView.MenuItems>
                    </muxc:NavigationView>
                </StackPanel>
            </local:ControlExample.Example>
        </local:ControlExample>
    </StackPanel>
</Page>
