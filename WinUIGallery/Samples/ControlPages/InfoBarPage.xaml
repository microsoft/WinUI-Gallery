<!--
    //*********************************************************
    //
    // Copyright (c) Microsoft. All rights reserved.
    // THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
    // ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
    // IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
    // PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
    //
    //*********************************************************
-->
<Page
    x:Class="WinUIGallery.ControlPages.InfoBarPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:WinUIGallery.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <StackPanel>
        <StackPanel.ChildrenTransitions>
            <RepositionThemeTransition />
        </StackPanel.ChildrenTransitions>
        
        <controls:ControlExample x:Name="Example1" HeaderText="A closable InfoBar with options to change its Severity.">
            <controls:ControlExample.Example>
                <InfoBar
                    x:Name="TestInfoBar1"
                    Title="Title"
                    IsOpen="True"
                    Message="Essential app message for your users to be informed of, acknowledge, or take action on."
                    Severity="Informational" />

            </controls:ControlExample.Example>
            <controls:ControlExample.Options>
                <StackPanel Width="150">
                    <CheckBox
                        x:Name="IsOpenCheckBox1"
                        Content="Is Open"
                        IsChecked="{x:Bind TestInfoBar1.IsOpen, Mode=TwoWay}" />
                    <ComboBox
                        x:Name="SeverityComboBox"
                        HorizontalAlignment="Stretch"
                        Header="Severity"
                        SelectedValue="Informational"
                        SelectionChanged="SeverityComboBox_SelectionChanged">
                        <x:String>Informational</x:String>
                        <x:String>Success</x:String>
                        <x:String>Warning</x:String>
                        <x:String>Error</x:String>
                    </ComboBox>
                </StackPanel>
            </controls:ControlExample.Options>

            <controls:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;InfoBar 
    IsOpen="$(IsOpen)"
    Severity="$(Severity)"
    Title="Title"
    Message="Essential app message for your users to be informed of, acknowledge, or take action on." /&gt;
                </x:String>
            </controls:ControlExample.Xaml>
            <controls:ControlExample.Substitutions>
                <controls:ControlExampleSubstitution Key="Severity" Value="{x:Bind SeverityComboBox.SelectedValue, Mode=OneWay}" />
                <controls:ControlExampleSubstitution Key="IsOpen" Value="{x:Bind IsOpenCheckBox1.IsChecked.Value, Mode=OneWay}" />
            </controls:ControlExample.Substitutions>
        </controls:ControlExample>
        <controls:ControlExample x:Name="Example2" HeaderText="A closable InfoBar with a long or short message and various buttons">
            <controls:ControlExample.Example>
                <InfoBar
                    x:Name="TestInfoBar2"
                    Title="Title"
                    IsOpen="True" />
            </controls:ControlExample.Example>
            <controls:ControlExample.Substitutions>
                <controls:ControlExampleSubstitution Key="IsOpen" Value="{x:Bind IsOpenCheckBox2.IsChecked.Value, Mode=OneWay}" />
                <controls:ControlExampleSubstitution
                    Key="DisplayMessage"
                    x:Name="DisplayMessage"
                    Value="" />
                <controls:ControlExampleSubstitution
                    Key="DisplayButton"
                    x:Name="DisplayButton"
                    Value="" />
            </controls:ControlExample.Substitutions>
            <controls:ControlExample.Options>
                <StackPanel Width="150">
                    <CheckBox
                        x:Name="IsOpenCheckBox2"
                        Content="Is Open"
                        IsChecked="{x:Bind TestInfoBar2.IsOpen, Mode=TwoWay}" />
                    <ComboBox
                        x:Name="MessageComboBox"
                        HorizontalAlignment="Stretch"
                        Header="Message Length"
                        SelectedIndex="1"
                        SelectionChanged="MessageComboBox_SelectionChanged">
                        <ComboBoxItem Content="Short" />
                        <ComboBoxItem Content="Long" />
                    </ComboBox>
                    <ComboBox
                        x:Name="ActionButtonComboBox"
                        HorizontalAlignment="Stretch"
                        Header="Action Button"
                        SelectedIndex="0"
                        SelectionChanged="ActionButtonComboBox_SelectionChanged">
                        <ComboBoxItem Content="None" />
                        <ComboBoxItem Content="Button" />
                        <ComboBoxItem Content="Hyperlink" />
                    </ComboBox>
                </StackPanel>
            </controls:ControlExample.Options>
            <controls:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;InfoBar 
    IsOpen="$(IsOpen)"
    Title="Title"
    Message="$(DisplayMessage)" &gt;
    $(DisplayButton)
&lt;/InfoBar&gt;
                </x:String>
            </controls:ControlExample.Xaml>
        </controls:ControlExample>
        <controls:ControlExample x:Name="Example3" HeaderText="A closable InfoBar with options to display the close button and icon">
            <controls:ControlExample.Example>
                <InfoBar
                    x:Name="TestInfoBar3"
                    Title="Title"
                    IsClosable="True"
                    IsIconVisible="True"
                    IsOpen="True"
                    Message="Essential app message for your users to be informed of, acknowledge, or take action on." />
            </controls:ControlExample.Example>
            <controls:ControlExample.Options>
                <StackPanel Width="150">
                    <CheckBox
                        x:Name="IsOpenCheckBox3"
                        Content="Is Open"
                        IsChecked="{x:Bind TestInfoBar3.IsOpen, Mode=TwoWay}" />
                    <CheckBox
                        x:Name="IsIconVisibleCheckBox"
                        Content="Is Icon Visible"
                        IsChecked="{x:Bind TestInfoBar3.IsIconVisible, Mode=TwoWay}" />
                    <CheckBox
                        x:Name="IsClosableCheckBox"
                        Content="Is Closable"
                        IsChecked="{x:Bind TestInfoBar3.IsClosable, Mode=TwoWay}" />
                </StackPanel>
            </controls:ControlExample.Options>
            <controls:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;InfoBar 
    IsOpen="$(IsOpen)"
    IsIconVisible="$(IsIconVisible)"                    
    IsClosable="$(IsClosable)"
    Title="Title"
    Message="Essential app message for your users to be informed of, acknowledge, or take action on." /&gt;
                </x:String>
            </controls:ControlExample.Xaml>
            <controls:ControlExample.Substitutions>
                <controls:ControlExampleSubstitution Key="IsOpen" Value="{x:Bind IsOpenCheckBox3.IsChecked.Value, Mode=OneWay}" />
                <controls:ControlExampleSubstitution Key="IsIconVisible" Value="{x:Bind IsIconVisibleCheckBox.IsChecked.Value, Mode=OneWay}" />
                <controls:ControlExampleSubstitution Key="IsClosable" Value="{x:Bind IsClosableCheckBox.IsChecked.Value, Mode=OneWay}" />
            </controls:ControlExample.Substitutions>
        </controls:ControlExample>
    </StackPanel>
</Page>
