<!--
    //*********************************************************
    //
    // Copyright (c) Microsoft. All rights reserved.
    // THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
    // ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
    // IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
    // PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
    //
    //*********************************************************
-->
<pages:ItemsPageBase
    x:Class="WinUIGallery.ControlPages.ListViewPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:models="using:WinUIGallery.Models"
    xmlns:controls="using:WinUIGallery.Controls"
    xmlns:local="using:WinUIGallery.ControlPages"
    xmlns:pages="using:WinUIGallery.Pages">
    <Page.Resources>
        <DataTemplate x:Key="ImageTextListMailFolderTemplate" x:DataType="models:ControlInfoDataItem">
            <Grid Margin="0,12,0,12">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="550" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Margin="0,12,0,0"
                    HorizontalAlignment="Left"
                    Text="{x:Bind Title}"
                    TextWrapping="Wrap" />
            </Grid>
        </DataTemplate>

        <!--
            Use a collection view source for content that presents itself as a list of items that can be grouped or sorted.  Otherwise, you can use x:Bind
            directly on the ListView's item source to for further optimization. Please see the WinUIGallery sample for an example of how to do this.
        -->
        <CollectionViewSource x:Name="ContactsCVS" IsSourceGrouped="True" />

        <!--  When using x:Bind, you need to set x:DataType  -->
        <DataTemplate x:Key="ContactListViewTemplate" x:DataType="local:Contact">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Ellipse
                    x:Name="Ellipse"
                    Grid.RowSpan="2"
                    Width="32"
                    Height="32"
                    Margin="6"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Fill="{ThemeResource ControlStrongFillColorDefaultBrush}" />
                <TextBlock
                    Grid.Column="1"
                    Margin="12,6,0,0"
                    x:Phase="1"
                    Style="{ThemeResource BaseTextBlockStyle}"
                    Text="{x:Bind Name}" />
                <TextBlock
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="12,0,0,6"
                    x:Phase="2"
                    Style="{ThemeResource BodyTextBlockStyle}"
                    Text="{x:Bind Company}" />
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="MessageViewTemplate" x:DataType="local:Message">
            <Grid
                Height="Auto"
                Margin="4"
                HorizontalAlignment="{x:Bind MsgAlignment}">
                <StackPanel
                    Width="350"
                    MinHeight="75"
                    Padding="10,0,0,10"
                    Background="{ThemeResource SystemColorHighlightColor}"
                    CornerRadius="{StaticResource ControlCornerRadius}">
                    <TextBlock
                        Padding="0,10,0,0"
                        FontSize="20"
                        Foreground="{ThemeResource SystemColorHighlightTextColor}"
                        Text="{x:Bind MsgText}" />
                    <TextBlock
                        Padding="0,0,0,10"
                        FontSize="15"
                        Foreground="{ThemeResource SystemColorHighlightTextColor}"
                        Text="{x:Bind MsgDateTime}" />
                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="BasicListViewTemplate" x:DataType="local:Contact">
            <TextBlock
                Margin="0,5,0,5"
                x:Phase="1"
                Text="{x:Bind Name}" />
        </DataTemplate>

    </Page.Resources>
    <StackPanel>

        <controls:ControlExample
            CSharpSource="ListView\ListViewSample1_cs.txt"
            HeaderText="Basic ListView with Simple DataTemplate"
            XamlSource="ListView\ListViewSample1_xaml.txt">
            <StackPanel>
                <TextBlock Margin="0,0,0,15">
                    This is a basic ListView that has the full source code below.<LineBreak />
                    Other samples on this page display only the additional markup needed to customize a simple ListView like this one.</TextBlock>
                <ListView
                    x:Name="BaseExample"
                    Width="350"
                    Height="400"
                    HorizontalAlignment="Left"
                    BorderBrush="{ThemeResource ControlStrongStrokeColorDefaultBrush}"
                    BorderThickness="1"
                    ItemTemplate="{StaticResource BasicListViewTemplate}" />
            </StackPanel>
        </controls:ControlExample>

        <controls:ControlExample HeaderText="ListView with Selection Support" XamlSource="ListView/ListViewSample3_xaml.txt">
            <StackPanel>
                <RichTextBlock Margin="0,0,0,15" TextWrapping="Wrap">
                    <Paragraph>You can enable four different selection modes on the right.</Paragraph>
                    <Paragraph>
                        <Bold>None</Bold>
                        disables selection all together.</Paragraph>
                    <Paragraph>
                        <Bold>Single</Bold>
                        allows for only one item to be selected in the list.</Paragraph>
                    <Paragraph>
                        <Bold>Multiple</Bold>
                        causes checkboxes to appear next to items, so that multiple items can be chosen from the list.</Paragraph>
                    <Paragraph>
                        <Bold>Extended</Bold>
                        allows the user to select multiple items by using Ctrl+Click to select the individual items they want, or Shift+Click to select a range of contiguous items.</Paragraph>
                </RichTextBlock>
                <ListView
                    x:Name="Control2"
                    Width="400"
                    Height="400"
                    HorizontalAlignment="Left"
                    BorderBrush="{ThemeResource ControlStrongStrokeColorDefaultBrush}"
                    BorderThickness="1"
                    ItemTemplate="{StaticResource ContactListViewTemplate}" />
            </StackPanel>
            <controls:ControlExample.Options>
                <StackPanel>
                    <ComboBox
                        Margin="0,12,0,0"
                        Header="SelectionMode"
                        SelectedIndex="1"
                        SelectionChanged="SelectionModeComboBox_SelectionChanged">
                        <x:String>None</x:String>
                        <x:String>Single</x:String>
                        <x:String>Multiple</x:String>
                        <x:String>Extended</x:String>
                    </ComboBox>
                </StackPanel>
            </controls:ControlExample.Options>
            <controls:ControlExample.Substitutions>
                <controls:ControlExampleSubstitution Key="SelectionMode" Value="{x:Bind Control2.SelectionMode, Mode=OneWay}" />
            </controls:ControlExample.Substitutions>
        </controls:ControlExample>

        <controls:ControlExample HeaderText="ListViews with Drag, Drop, and Reordering Support">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <TextBlock Style="{StaticResource BodyTextBlockStyle}">
                    In these ListView controls, you can drag and drop within a list to reorder items, or drag and drop between lists to move items.
                </TextBlock>
                <ListView
                    x:Name="DragDropListView"
                    Grid.Row="1"
                    Grid.Column="0"
                    Height="400"
                    MinWidth="350"
                    Margin="12"
                    AllowDrop="True"
                    BorderBrush="{ThemeResource ControlStrongStrokeColorDefaultBrush}"
                    BorderThickness="1"
                    CanDragItems="True"
                    CanReorderItems="True"
                    DragItemsStarting="Source_DragItemsStarting"
                    DragOver="Source_DragOver"
                    Drop="ListView_Drop"
                    ItemTemplate="{StaticResource ContactListViewTemplate}"
                    SelectionMode="Single" />
                <ListView
                    x:Name="DragDropListView2"
                    Grid.Row="1"
                    Grid.Column="1"
                    Height="400"
                    MinWidth="350"
                    AllowDrop="True"
                    BorderBrush="{ThemeResource ControlStrongStrokeColorDefaultBrush}"
                    BorderThickness="1"
                    CanDragItems="True"
                    CanReorderItems="True"
                    DragEnter="Target_DragEnter"
                    DragItemsStarting="Target_DragItemsStarting"
                    DragOver="Target_DragOver"
                    Drop="ListView_Drop"
                    ItemTemplate="{StaticResource ContactListViewTemplate}"
                    SelectionMode="Single" />
            </Grid>

            <controls:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;!-- Full code to implement dragging and dropping between lists can be found in the 
source code for the WinUI Gallery. -->

&lt;!-- The following properties should be added to the ListView definitions to build this sample. --&gt;
&lt;ListView CanDragItems="True" CanReorderItems="True" AllowDrop="True"
    SelectionMode="Single" /&gt;
    
&lt;!-- DataTemplate used is the same as the above sample. --&gt;

                </x:String>
            </controls:ControlExample.Xaml>
            <controls:ControlExample.Substitutions>
                <controls:ControlExampleSubstitution Key="SelectionMode" Value="{x:Bind Control2.SelectionMode, Mode=OneWay}" />
            </controls:ControlExample.Substitutions>
        </controls:ControlExample>

        <controls:ControlExample
            CSharpSource="ListView\ListViewSample2_cs.txt"
            HeaderText="ListView with Grouped Headers"
            XamlSource="ListView\ListViewSample2_xaml.txt">
            <StackPanel>
                <TextBlock Margin="0,0,0,15" TextWrapping="Wrap">
                    Switch the toggle on the right to enable sticky group headers, which makes the headers stay put at the top of the ListView while scrolling.
                </TextBlock>
                <ListView
                    x:Name="GroupedListViewCtrl"
                    Width="400"
                    Height="400"
                    HorizontalAlignment="Left"
                    BorderBrush="{ThemeResource ControlStrongStrokeColorDefaultBrush}"
                    BorderThickness="1"
                    ItemTemplate="{StaticResource ContactListViewTemplate}"
                    ItemsSource="{x:Bind ContactsCVS.View, Mode=OneWay}"
                    SelectionMode="Single"
                    ShowsScrollingPlaceholders="True">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel
                                x:Name="GroupedStackPanel"
                                AreStickyGroupHeadersEnabled="False"
                                Loaded="StackPanel_loaded" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>

                    <ListView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate x:DataType="local:GroupInfoList">
                                    <Border AutomationProperties.AccessibilityView="Raw">
                                        <TextBlock
                                            AutomationProperties.AccessibilityView="Raw"
                                            Style="{ThemeResource TitleTextBlockStyle}"
                                            Text="{x:Bind Key}" />
                                    </Border>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </ListView.GroupStyle>
                </ListView>
            </StackPanel>
            <controls:ControlExample.Options>
                <StackPanel>
                    <ToggleSwitch
                        x:Name="StickySwitch"
                        Header="Sticky Headers"
                        IsOn="False"
                        Toggled="ToggleSwitch_Toggled" />
                </StackPanel>
            </controls:ControlExample.Options>

            <controls:ControlExample.Substitutions>
                <controls:ControlExampleSubstitution Key="AreStickyGroupHeadersEnabled" Value="{x:Bind StickySwitch.IsOn, Mode=OneWay}" />
            </controls:ControlExample.Substitutions>
        </controls:ControlExample>

        <controls:ControlExample
            CSharpSource="ListView/ListViewSample4_cs.txt"
            HeaderText="ListView with filtering"
            XamlSource="ListView/ListViewSample4_xaml.txt">
            <ListView
                x:Name="FilteredListView"
                Width="400"
                Height="400"
                BorderBrush="{ThemeResource ControlStrongStrokeColorDefaultBrush}"
                BorderThickness="1"
                ItemTemplate="{StaticResource ContactListViewTemplate}"
                SelectionMode="Single"
                ShowsScrollingPlaceholders="True" />

            <controls:ControlExample.Options>
                <StackPanel Width="200">
                    <TextBlock Margin="8,8,8,4" Style="{ThemeResource BaseTextBlockStyle}">Filter by...</TextBlock>
                    <TextBox
                        x:Name="FilterByFirstName"
                        Margin="8"
                        HorizontalAlignment="Stretch"
                        Header="First name"
                        TextChanged="OnFilterChanged" />
                    <TextBox
                        x:Name="FilterByLastName"
                        Margin="8"
                        HorizontalAlignment="Stretch"
                        Header="Last name"
                        TextChanged="OnFilterChanged" />
                    <TextBox
                        x:Name="FilterByCompany"
                        Margin="8"
                        HorizontalAlignment="Stretch"
                        Header="Company"
                        TextChanged="OnFilterChanged" />
                </StackPanel>
            </controls:ControlExample.Options>

        </controls:ControlExample>

        <controls:ControlExample HeaderText="ListView for Messaging or Data Logging">
            <StackPanel>
                <TextBlock Margin="0,0,0,15" TextWrapping="Wrap">
                    This ListView is inverted to grow from the bottom up. It's a good way to display logs or messages, with most recent at the bottom.
                </TextBlock>
                <ListView
                    x:Name="InvertedListView"
                    Height="400"
                    BorderBrush="{ThemeResource ControlStrongStrokeColorDefaultBrush}"
                    BorderThickness="1"
                    ItemTemplate="{StaticResource MessageViewTemplate}"
                    SelectionMode="None">

                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel VerticalAlignment="Bottom" ItemsUpdatingScrollMode="KeepLastItemInView" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>

                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </ListView.ItemContainerStyle>

                </ListView>
            </StackPanel>
            <controls:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;ListView x:Name="InvertedListView"
             ItemTemplate="{StaticResource MessageViewTemplate}"&gt;
                    
     &lt;!-- The ItemsStackPanel must be edited to update the following two properties --&gt;
     &lt;!-- These properties allow the list to grow from the bottom --&gt;
     &lt;ListView.ItemsPanel&gt;
         &lt;ItemsPanelTemplate&gt;
             &lt;ItemsStackPanel ItemsUpdatingScrollMode="KeepLastItemInView" 
                              VerticalAlignment="Bottom"/&gt;
         &lt;/ItemsPanelTemplate&gt;
     &lt;/ListView.ItemsPanel&gt;

     &lt;!-- This setter property is created so ListViewItems correctly align to the left or right. --&gt;
     &lt;ListView.ItemContainerStyle&gt;
         &lt;Style TargetType="ListViewItem"&gt;
             &lt;Setter Property="HorizontalContentAlignment" Value="Stretch"/&gt;
         &lt;/Style&gt;
     &lt;/ListView.ItemContainerStyle&gt;
&lt;/ListView&gt;

&lt;!-- Data template used: --&gt;
&lt;!-- The data template is bound to a custom DataType called Message. --&gt;
&lt;!-- Each Message object has a color and alignment assigned to it based on whether it was 
sent or received, and those values are bound in the DataTemplate.--&gt;
&lt;DataTemplate x:Key="MessageViewTemplate" x:DataType="local:Message"&gt;
    &lt;Grid Height="Auto" Margin="4" HorizontalAlignment="{x:Bind MsgAlignment}"&gt;
        &lt;StackPanel MinHeight="75" Width="350" Padding="10, 0, 0, 10" Background="{ThemeResource SystemColorHighlightColor}" CornerRadius="{StaticResource ControlCornerRadius}"&gt;
            &lt;TextBlock Text="{x:Bind MsgText}" Padding="0, 10, 0, 0" FontSize="20" Foreground="{ThemeResource SystemColorHighlightTextColor}"/&gt;
            &lt;TextBlock Text="{x:Bind MsgDateTime}" Padding="0, 0, 0, 10" FontSize="15" Foreground="{ThemeResource SystemColorHighlightTextColor}"/&gt;
        &lt;/StackPanel&gt;
    &lt;/Grid&gt;
&lt;/DataTemplate&gt;

                </x:String>
            </controls:ControlExample.Xaml>
            <controls:ControlExample.Options>
                <StackPanel HorizontalAlignment="Right">
                    <Button Margin="0,0,0,10" Click="{x:Bind AddItemToEnd}">Send Message</Button>
                    <Button Click="MessageReceived">Receive Message</Button>
                </StackPanel>
            </controls:ControlExample.Options>

        </controls:ControlExample>

        <controls:ControlExample HeaderText="ListView with Images">
            <ListView
                x:Name="Control4"
                Height="400"
                MinWidth="550"
                AllowDrop="True"
                BorderBrush="{ThemeResource ControlStrongStrokeColorDefaultBrush}"
                BorderThickness="1"
                CanDrag="True"
                CanDragItems="True"
                CanReorderItems="True">
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="local:CustomDataObject">
                        <Grid Margin="0,12,0,12" AutomationProperties.Name="{x:Bind Title}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="150" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Image
                                MaxHeight="100"
                                Source="{x:Bind ImageLocation}"
                                Stretch="Fill" />

                            <StackPanel Grid.Column="1" Margin="12,0,0,0">
                                <TextBlock
                                    Margin="0,0,0,6"
                                    HorizontalAlignment="Left"
                                    FontSize="14"
                                    FontWeight="SemiBold"
                                    LineHeight="20"
                                    Style="{ThemeResource BaseTextBlockStyle}"
                                    Text="{x:Bind Title}" />
                                <TextBlock
                                    Width="350"
                                    MaxHeight="60"
                                    Margin="0,0,0,10"
                                    FontFamily="Segoe UI"
                                    FontWeight="Normal"
                                    IsTextTrimmedChanged="TextBlock_IsTextTrimmedChanged"
                                    Style="{ThemeResource BodyTextBlockStyle}"
                                    Text="{x:Bind Description}"
                                    TextTrimming="CharacterEllipsis"
                                    TextWrapping="Wrap" />
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock
                                        Margin="0"
                                        Style="{ThemeResource CaptionTextBlockStyle}"
                                        Text="{x:Bind Views}" />
                                    <TextBlock Style="{ThemeResource CaptionTextBlockStyle}" Text=" Views " />
                                    <TextBlock Style="{ThemeResource CaptionTextBlockStyle}" Text=" &#x22C5; " />
                                    <TextBlock
                                        Margin="5,0,0,0"
                                        Style="{ThemeResource CaptionTextBlockStyle}"
                                        Text="{x:Bind Likes}" />
                                    <TextBlock Style="{ThemeResource CaptionTextBlockStyle}" Text=" Likes" />
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <controls:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;ListView x:Name="Control4"
     Height="400"
     MinWidth="550"
     BorderThickness="1"
     BorderBrush="{ThemeResource ControlStrongStrokeColorDefaultBrush}"&gt;
                    
&lt;!-- Data Template Used: --&gt;
&lt;!-- The data template is bound to a custom-created data type called CustomDataObject. --&gt;
&lt;!-- The full code for the class can be found in this page's source code, but its attributes are referenced/bound below. --&gt;

&lt;DataTemplate x:DataType="local:CustomDataObject"&gt;
    &lt;Grid Margin="0,12,0,12" AutomationProperties.Name="{x:Bind Title}"&gt;
        &lt;Grid.ColumnDefinitions&gt;
            &lt;ColumnDefinition Width="Auto" MinWidth="150"/&gt;
            &lt;ColumnDefinition Width="*" /&gt;
        &lt;/Grid.ColumnDefinitions&gt;
        &lt;Image Source="{x:Bind ImageLocation}" MaxHeight="100" Stretch="Fill"/&gt;

        &lt;StackPanel Margin="12,0,0,0" Grid.Column="1" &gt;
            &lt;TextBlock Text="{x:Bind Title}" FontSize="14" FontWeight="SemiBold" Style="{ThemeResource BaseTextBlockStyle}"
                        HorizontalAlignment="Left" Margin="0,0,0,6" LineHeight="20"/&gt;
            &lt;TextBlock Text="{x:Bind Description}" FontFamily="Segoe UI" FontWeight="Normal" Style="{ThemeResource BodyTextBlockStyle}"
                        TextTrimming="CharacterEllipsis" Width="350" MaxLines="1"/&gt;
            &lt;StackPanel Orientation="Horizontal"&gt;
                &lt;TextBlock Text="{x:Bind Views}" HorizontalAlignment="Left" Style="{ThemeResource CaptionTextBlockStyle}" Margin="0,0,0,0"/&gt;
                &lt;TextBlock Text=" Views " HorizontalAlignment="Left" Style="{ThemeResource CaptionTextBlockStyle}"/&gt;
                &lt;TextBlock Text=" &#x22C5; " Style="{ThemeResource CaptionTextBlockStyle}" 
                            HorizontalAlignment="Left"/&gt;
                &lt;TextBlock Text="{x:Bind Likes}" HorizontalAlignment="Left" Style="{ThemeResource CaptionTextBlockStyle}" Margin="5,0,0,0"/&gt;
                &lt;TextBlock Text=" Likes" HorizontalAlignment="Left" Style="{ThemeResource CaptionTextBlockStyle}"/&gt;
            &lt;/StackPanel&gt;
        &lt;/StackPanel&gt;
    &lt;/Grid&gt;
&lt;/DataTemplate&gt;                  
                </x:String>
            </controls:ControlExample.Xaml>
        </controls:ControlExample>


        <controls:ControlExample HeaderText="ListView with context menus">
            <StackPanel>
                <TextBlock
                    Margin="0,0,0,15"
                    Text="This ListView allows users to right click to open a context menu. In this case, the context menu provides the option to delete an entry."
                    TextWrapping="Wrap" />
                <ListView
                    x:Name="ContextMenuList"
                    Width="400"
                    Height="400"
                    HorizontalAlignment="Left"
                    BorderThickness="1"
                    SelectionMode="Single"
                    ShowsScrollingPlaceholders="True">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="local:Contact">
                            <Grid>
                                <Grid.ContextFlyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem Click="ContactDeleteMenuItem_Click" Text="Delete" />
                                    </MenuFlyout>
                                </Grid.ContextFlyout>

                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Ellipse
                                    x:Name="Ellipse"
                                    Grid.RowSpan="2"
                                    Width="32"
                                    Height="32"
                                    Margin="6"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="{ThemeResource ControlStrongFillColorDefaultBrush}" />
                                <TextBlock
                                    Grid.Column="1"
                                    Margin="12,6,0,0"
                                    x:Phase="1"
                                    Style="{ThemeResource BaseTextBlockStyle}"
                                    Text="{x:Bind Name}" />
                                <TextBlock
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Margin="12,0,0,6"
                                    x:Phase="2"
                                    Style="{ThemeResource BodyTextBlockStyle}"
                                    Text="{x:Bind Company}" />
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackPanel>

            <controls:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;ListView
    ItemsSource="{x:Bind contacts, Mode=OneWay}"
    SelectionMode="Single"
    ShowsScrollingPlaceholders="True"
    Height="400"
    Width="400"
    BorderThickness="1"
    BorderBrush="{ThemeResource ControlStrongStrokeColorDefaultBrush}"
    HorizontalAlignment="Left"&gt;
    &lt;ListView.ItemTemplate&gt;
        &lt;DataTemplate x:DataType="local:Contact"&gt;
            &lt;Grid&gt;
                &lt;Grid.ContextFlyout&gt;
                    &lt;MenuFlyout&gt;
                        &lt;MenuFlyoutItem Text="Delete" Click="ContactDeleteMenuItem_Click"/&gt;
                    &lt;/MenuFlyout&gt;
                &lt;/Grid.ContextFlyout&gt;
             
                &lt;Grid.RowDefinitions&gt;
                    &lt;RowDefinition Height="*"/&gt;
                    &lt;RowDefinition Height="*"/&gt;
                &lt;/Grid.RowDefinitions&gt;
                &lt;Grid.ColumnDefinitions&gt;
                    &lt;ColumnDefinition Width="Auto"/&gt;
                    &lt;ColumnDefinition Width="*"/&gt;
                &lt;/Grid.ColumnDefinitions&gt;
                &lt;Ellipse x:Name="Ellipse"
                    Grid.RowSpan="2"
                    Width ="32"
                    Height="32"
                    Margin="6"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Fill="{ThemeResource ControlStrongFillColorDefaultBrush}"/&gt;
                &lt;TextBlock Grid.Column="1"
                    Text="{x:Bind Name}"
                    x:Phase="1"
                    Style="{ThemeResource BaseTextBlockStyle}"
                    Margin="12,6,0,0"/&gt;
                &lt;TextBlock Grid.Column="1"
                    Grid.Row="1"
                    Text="{x:Bind Company}"
                    x:Phase="2"
                    Style="{ThemeResource BodyTextBlockStyle}"
                    Margin="12,0,0,6"/&gt;
            &lt;/Grid&gt;
        &lt;/DataTemplate&gt;
    &lt;/ListView.ItemTemplate&gt;
&lt;/DataTemplate&gt;                  
                </x:String>
            </controls:ControlExample.Xaml>

            <controls:ControlExample.CSharp>
                <x:String xml:space="preserve">
ObservableCollection&lt;Contact&gt; contacts = new ObservableCollection&lt;Contact&gt;();

private void ContactDeleteMenuItem_Click(object sender, RoutedEventArgs e)
{
    var item = (sender as FrameworkElement).DataContext;
    var contact = item as Contact;
    contacts.Remove(contact);
}
                </x:String>
            </controls:ControlExample.CSharp>

        </controls:ControlExample>

    </StackPanel>
</pages:ItemsPageBase>
