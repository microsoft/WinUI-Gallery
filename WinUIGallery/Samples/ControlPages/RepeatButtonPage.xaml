<!--
    //*********************************************************
    //
    // Copyright (c) Microsoft. All rights reserved.
    // THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
    // ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
    // IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
    // PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
    //
    //*********************************************************
-->
<Page
    x:Class="WinUIGallery.ControlPages.RepeatButtonPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:WinUIGallery.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <StackPanel>
        <controls:ControlExample HeaderText="A simple RepeatButton with text content.">
            <StackPanel Orientation="Horizontal">
                <RepeatButton
                    x:Name="Control1"
                    Click="RepeatButton_Click"
                    Content="Click and hold"
                    IsEnabled="{x:Bind DisableControl1.IsChecked.Value.Equals(x:False), Mode=OneWay}" />
                <TextBlock
                    x:Name="Control1Output"
                    Margin="8,0,0,0"
                    VerticalAlignment="Center"
                    AutomationProperties.LiveSetting="Polite"
                    AutomationProperties.Name="Control output" />
            </StackPanel>

            <controls:ControlExample.Options>
                <CheckBox x:Name="DisableControl1" Content="Disable RepeatButton" />
            </controls:ControlExample.Options>

            <controls:ControlExample.Xaml>
                <x:String>
                    &lt;RepeatButton Content="Click and hold" Click="RepeatButton_Click" $(IsEnabled)/&gt;
                </x:String>
            </controls:ControlExample.Xaml>
            <controls:ControlExample.Substitutions>
                <controls:ControlExampleSubstitution
                    Key="IsEnabled"
                    IsEnabled="{x:Bind DisableControl1.IsChecked.Value, Mode=OneWay}"
                    Value="IsEnabled=&quot;False&quot; " />
            </controls:ControlExample.Substitutions>
        </controls:ControlExample>
    </StackPanel>
</Page>
