<Page
    x:Class="WinUIGallery.ControlPages.XamlUICommandPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:WinUIGallery.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <Page.Resources>
        <Style
            x:Key="HorizontalSwipe"
            BasedOn="{StaticResource ListViewItemRevealStyle}"
            TargetType="ListViewItem">
            <Setter Property="Height" Value="60" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>
        <XamlUICommand
            x:Name="CustomXamlUICommand"
            Description="This is a custom command"
            ExecuteRequested="CustomXamlUICommand_ExecuteRequested"
            Label="Custom XamlUICommand">
            <XamlUICommand.IconSource>
                <SymbolIconSource Symbol="Favorite" />
            </XamlUICommand.IconSource>
            <XamlUICommand.KeyboardAccelerators>
                <KeyboardAccelerator Key="D" Modifiers="Control" />
            </XamlUICommand.KeyboardAccelerators>
        </XamlUICommand>
    </Page.Resources>

    <StackPanel>
        <controls:ControlExample
            HorizontalContentAlignment="Stretch"
            CSharpSource="XamlUICommand\XamlUICommandSample1_cs.txt"
            HeaderText="Creating a reusable command with XamlUICommand"
            XamlSource="XamlUICommand\XamlUICommandSample1_xaml.txt">
            <Grid x:Name="rootGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <TextBlock Margin="0,0,0,12" TextWrapping="Wrap">
                    XamlUICommand allows the sharing of the UX associated with a command.
                    In this instance we create a simple Custom Command with a label, icon, shortcut, and description.
                    It's defined as a resource and could be used in many controls, like this AppBarButton.
                    The button (and other controls) automatically gets all these UI properties, without the need to define the properties again.
                </TextBlock>

                <RelativePanel Grid.Row="1">
                    <AppBarButton x:Name="CustomButton" Command="{StaticResource CustomXamlUICommand}" />
                    <TextBlock
                        x:Name="XamlUICommandOutput"
                        Margin="8,0,0,0"
                        FontFamily="Global User Interface"
                        RelativePanel.AlignVerticalCenterWith="CustomButton"
                        RelativePanel.RightOf="CustomButton" />
                </RelativePanel>

            </Grid>
        </controls:ControlExample>
    </StackPanel>
</Page>
