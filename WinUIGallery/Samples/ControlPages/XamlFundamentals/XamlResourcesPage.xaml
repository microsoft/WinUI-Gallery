<?xml version="1.0" encoding="utf-8" ?>
<Page
    x:Class="WinUIGallery.ControlPages.XamlResourcesPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:WinUIGallery.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <Color x:Key="PrimaryColor">#0078D4</Color>
        <SolidColorBrush x:Key="HighlightBrush" Color="#A94DC1" />
        <SolidColorBrush x:Key="FontColor" Color="White" />
    </Page.Resources>

    <StackPanel>
        <TextBlock
            Margin="0,12,0,4"
            Style="{ThemeResource SubtitleTextBlockStyle}"
            Text="Creating and using XAML resources" />
        <StackPanel Spacing="12">
            <RichTextBlock>
                <Paragraph>
                    <Run Text="XAML Resources are defined using the" />
                    <Run FontFamily="Consolas" Text="ResourceDictionary" />
                    <Run Text="element. The important parts are" />
                    <Run FontWeight="SemiBold" Text="the resource's key" />
                    <Run Text="(a unique identifier) and" />
                    <Run FontWeight="SemiBold" Text="the value" />
                    <Run Text="(like a color or brush)." />
                </Paragraph>
            </RichTextBlock>

            <RichTextBlock>
                <Paragraph>• App-level: Resources are defined globally, accessible throughout the application.</Paragraph>
                <Paragraph>• Page-level: Resources are defined specific to a particular page.</Paragraph>
                <Paragraph>• Control-level: Resources are defined local to a specific control, such as a Button or Grid.</Paragraph>
            </RichTextBlock>

            <RichTextBlock>
                <Paragraph FontWeight="SemiBold">Tips</Paragraph>
                <Paragraph>• Naming: descriptive keys should always be used for resources to make them easier to identify.</Paragraph>
                <Paragraph>• Scope: Resources should be defined at the narrowest scope possible to improve maintainability.</Paragraph>
                <Paragraph>
                    <Run Text="• Access:" />
                    <Run FontFamily="Consolas" Text="{}{StaticResource Key}" />
                    <Run Text="is used in XAML for most cases, and" />
                    <Run FontFamily="Consolas" Text="Resources[&quot;Key&quot;]" />
                    <Run Text=" is used in C# for runtime access." />
                </Paragraph>
            </RichTextBlock>

        </StackPanel>

        <controls:ControlExample CSharpSource="XamlResources\XamlResourcesSample1_csharp.txt" XamlSource="XamlResources\XamlResourcesSample1_xaml.txt">
            <controls:ControlExample.Example>
                <!--  StackPanel using the application-level resource 'PrimaryColor'  -->
                <StackPanel
                    Padding="8"
                    Background="{StaticResource PrimaryColor}"
                    CornerRadius="{StaticResource ControlCornerRadius}">
                    <TextBlock
                        FontSize="24"
                        Foreground="White"
                        Text="Using application-level resources" />

                    <!--  StackPanel using the page-level resource 'HighlightBrush'  -->
                    <StackPanel
                        Margin="8"
                        Padding="8"
                        Background="{StaticResource HighlightBrush}"
                        CornerRadius="{StaticResource ControlCornerRadius}">
                        <TextBlock
                            FontSize="18"
                            Foreground="{StaticResource FontColor}"
                            Text="Using page-level resources" />

                        <!--  StackPanel with control-level resources defined within its own Resources  -->
                        <StackPanel
                            Margin="8"
                            Padding="8"
                            CornerRadius="{StaticResource ControlCornerRadius}">
                            <StackPanel.Resources>
                                <!--  Define control-level resources for font size and text  -->
                                <Color x:Key="BackgroundColor">#E2241A</Color>
                                <x:String x:Key="Description">Using control-level resources</x:String>
                            </StackPanel.Resources>
                            <Grid
                                Padding="8"
                                Background="{StaticResource BackgroundColor}"
                                CornerRadius="{StaticResource ControlCornerRadius}">
                                <TextBlock Foreground="White" Text="{StaticResource Description}" />
                            </Grid>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </controls:ControlExample.Example>
        </controls:ControlExample>

        <TextBlock
            Margin="0,24,0,4"
            Style="{ThemeResource SubtitleTextBlockStyle}"
            Text="Theme resources" />
        <StackPanel Spacing="12">
            <RichTextBlock>
                <Paragraph>
                    WinUI 3 includes built-in theme resources for commonly used colors. See all brushes on the <Hyperlink Click="Hyperlink_Click">Color page</Hyperlink>
                    .</Paragraph>
            </RichTextBlock>

            <RichTextBlock>
                <Paragraph>
                    <Run Text="•" />
                    <Run FontWeight="SemiBold" Text="ThemeResource" />
                    <Run Text="is used for dynamic theme-based updates." />
                </Paragraph>
                <Paragraph>
                    <Run Text="•" />
                    <Run FontWeight="SemiBold" Text="ThemeDictionaries" />
                    <Run Text="are defined to provide different values for light and dark themes." />
                </Paragraph>
                <Paragraph>• A fallback value should always be provided to ensure compatibility with undefined themes.</Paragraph>
            </RichTextBlock>
        </StackPanel>

        <controls:ControlExample HeaderText="StaticResource versus ThemeResource" XamlSource="XamlResources\XamlResourcesSample2_xaml.txt">
            <controls:ControlExample.Example>
                <StackPanel>
                    <TextBlock Margin="0,0,0,16" Text="Toggle the theme using the theme switch button in the top right corner." />

                    <Grid Background="{StaticResource SolidBackgroundFillColorBaseBrush}">
                        <TextBlock
                            FontSize="16"
                            Foreground="{StaticResource TextFillColorPrimaryBrush}"
                            Text="StaticResource uses the value defined when the app starts and does not update when the theme changes."
                            TextWrapping="Wrap" />
                    </Grid>

                    <Grid Background="{ThemeResource SolidBackgroundFillColorBaseBrush}">
                        <TextBlock
                            FontSize="16"
                            Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                            Text="ThemeResource adapts automatically to the current theme. If the app switches from light to dark, the color defined by ThemeResource changes."
                            TextWrapping="Wrap" />
                    </Grid>
                </StackPanel>
            </controls:ControlExample.Example>
        </controls:ControlExample>

        <controls:ControlExample HeaderText="Define a new theme resource" XamlSource="XamlResources\XamlResourcesSample3_xaml.txt">
            <controls:ControlExample.Example>
                <StackPanel Spacing="12">
                    <TextBlock Text="Toggle the theme using the theme switch button in the top right corner." />
                    <Grid>
                        <Grid.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.ThemeDictionaries>
                                    <ResourceDictionary x:Key="Default">
                                        <SolidColorBrush x:Key="BackgroundBrush" Color="#EEE" />
                                        <SolidColorBrush x:Key="TextBrush" Color="#333" />
                                        <x:String x:Key="ThemeString">Light theme</x:String>
                                        <ImageSource x:Key="ImageSource">ms-appx:///Assets/SampleMedia/Light_Image.png</ImageSource>
                                    </ResourceDictionary>
                                    <ResourceDictionary x:Key="Dark">
                                        <SolidColorBrush x:Key="BackgroundBrush" Color="#333" />
                                        <SolidColorBrush x:Key="TextBrush" Color="#EEE" />
                                        <x:String x:Key="ThemeString">Dark theme</x:String>
                                        <ImageSource x:Key="ImageSource">ms-appx:///Assets/SampleMedia/Dark_Image.png</ImageSource>
                                    </ResourceDictionary>
                                </ResourceDictionary.ThemeDictionaries>
                            </ResourceDictionary>
                        </Grid.Resources>
                        <StackPanel
                            MaxWidth="700"
                            Padding="8"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="{ThemeResource BackgroundBrush}"
                            CornerRadius="{StaticResource ControlCornerRadius}"
                            Spacing="4">
                            <TextBlock
                                Foreground="{ThemeResource TextBrush}"
                                Style="{StaticResource SubtitleTextBlockStyle}"
                                Text="{ThemeResource ThemeString}" />
                            <Grid CornerRadius="{StaticResource ControlCornerRadius}">
                                <Image Source="{ThemeResource ImageSource}" />
                            </Grid>
                        </StackPanel>
                    </Grid>
                </StackPanel>
            </controls:ControlExample.Example>
        </controls:ControlExample>
    </StackPanel>
</Page>
