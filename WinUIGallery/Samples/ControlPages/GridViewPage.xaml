<!--
    //*********************************************************
    //
    // Copyright (c) Microsoft. All rights reserved.
    // THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
    // ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
    // IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
    // PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
    //
    //*********************************************************
-->
<pages:ItemsPageBase
    x:Class="WinUIGallery.ControlPages.GridViewPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:WinUIGallery.Controls"
    xmlns:local="using:WinUIGallery.ControlPages"
    xmlns:pages="using:WinUIGallery.Pages">

    <Page.Resources>
        <DataTemplate x:Key="ImageTemplate" x:DataType="local:CustomDataObject">
            <Image
                Width="190"
                Height="130"
                AutomationProperties.AccessibilityView="Raw"
                AutomationProperties.Name="{x:Bind Title}"
                Source="{x:Bind ImageLocation}"
                Stretch="UniformToFill" />
        </DataTemplate>

        <DataTemplate x:Key="IconTextTemplate" x:DataType="local:CustomDataObject">
            <RelativePanel
                Width="280"
                MinHeight="160"
                AutomationProperties.Name="{x:Bind Title}">
                <Image
                    x:Name="image"
                    Width="18"
                    Margin="0,4,0,0"
                    RelativePanel.AlignLeftWithPanel="True"
                    RelativePanel.AlignTopWithPanel="True"
                    Source="{x:Bind ImageLocation}"
                    Stretch="Uniform" />
                <TextBlock
                    x:Name="title"
                    Margin="8,0,0,0"
                    RelativePanel.AlignTopWithPanel="True"
                    RelativePanel.RightOf="image"
                    Style="{StaticResource BaseTextBlockStyle}"
                    Text="{x:Bind Title}" />
                <TextBlock
                    Margin="0,4,8,0"
                    RelativePanel.Below="title"
                    Style="{StaticResource CaptionTextBlockStyle}"
                    Text="{x:Bind Description}"
                    TextTrimming="WordEllipsis"
                    TextWrapping="Wrap" />
            </RelativePanel>
        </DataTemplate>

        <DataTemplate x:Key="ImageTextTemplate" x:DataType="local:CustomDataObject">
            <Grid Width="280" AutomationProperties.Name="{x:Bind Title}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Image
                    Height="100"
                    VerticalAlignment="Top"
                    Source="{x:Bind ImageLocation}"
                    Stretch="Fill" />
                <StackPanel Grid.Column="1" Margin="8,0,0,8">
                    <TextBlock
                        Margin="0,0,0,8"
                        Style="{ThemeResource SubtitleTextBlockStyle}"
                        Text="{x:Bind Title}" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Style="{ThemeResource CaptionTextBlockStyle}" Text="{x:Bind Views}" />
                        <TextBlock Style="{ThemeResource CaptionTextBlockStyle}" Text=" Views " />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Style="{ThemeResource CaptionTextBlockStyle}" Text="{x:Bind Likes}" />
                        <TextBlock Style="{ThemeResource CaptionTextBlockStyle}" Text=" Likes" />
                    </StackPanel>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="TextTemplate" x:DataType="local:CustomDataObject">
            <StackPanel Width="240" Orientation="Horizontal">
                <TextBlock
                    Margin="8,0,0,0"
                    Style="{StaticResource TitleTextBlockStyle}"
                    Text="{x:Bind Title}" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="ImageOverlayTemplate" x:DataType="local:CustomDataObject">
            <Grid Width="100" AutomationProperties.Name="{x:Bind Title}">
                <Image Source="{x:Bind ImageLocation}" Stretch="UniformToFill" />
                <StackPanel
                    Height="40"
                    Padding="5,1,5,1"
                    VerticalAlignment="Bottom"
                    Background="{ThemeResource SystemControlBackgroundBaseMediumBrush}"
                    Opacity=".75"
                    Orientation="Vertical">
                    <TextBlock Foreground="{ThemeResource SystemControlForegroundAltHighBrush}" Text="{x:Bind Title}" />
                    <StackPanel Orientation="Horizontal">
                        <TextBlock
                            Foreground="{ThemeResource SystemControlForegroundAltHighBrush}"
                            Style="{ThemeResource CaptionTextBlockStyle}"
                            Text="{x:Bind Likes}" />
                        <TextBlock
                            Foreground="{ThemeResource SystemControlForegroundAltHighBrush}"
                            Style="{ThemeResource CaptionTextBlockStyle}"
                            Text=" Likes" />
                    </StackPanel>
                </StackPanel>
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <StackPanel>
        <StackPanel.ChildrenTransitions>
            <RepositionThemeTransition />
        </StackPanel.ChildrenTransitions>
        
        <controls:ControlExample
            CSharpSource="GridView/GridViewSample1_cs.txt"
            HeaderText="Basic GridView with Simple DataTemplate"
            XamlSource="GridView/GridViewSample1_xaml.txt">
            <StackPanel>
                <TextBlock Margin="0,0,0,15">
                    This is a basic GridView that has the full source code below.<LineBreak />
                    Other samples on this page display only the additional markup needed to customize the specific GridView.</TextBlock>
                <GridView
                    x:Name="BasicGridView"
                    IsItemClickEnabled="True"
                    ItemClick="BasicGridView_ItemClick"
                    ItemTemplate="{StaticResource ImageTemplate}"
                    SelectionMode="Single" />
                <TextBlock x:Name="ClickOutput0" Style="{StaticResource OutputTextBlockStyle}" />
            </StackPanel>
        </controls:ControlExample>

        <controls:ControlExample HeaderText="GridView with Layout Customization">
            <StackPanel>
                <TextBlock Margin="0,0,0,15" TextWrapping="Wrap">
                    Use the options on the right to control different layout customizations to the GridView below.
                </TextBlock>
                <GridView x:Name="StyledGrid" ItemTemplate="{StaticResource ImageOverlayTemplate}">
                    <GridView.ItemContainerStyle>
                        <Style BasedOn="{StaticResource DefaultGridViewItemStyle}" TargetType="GridViewItem">
                            <Setter Property="Margin" Value="5" />
                        </Style>
                    </GridView.ItemContainerStyle>

                    <GridView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsWrapGrid
                                x:Name="MaxItemsWrapGrid"
                                Loaded="StyledGrid_InitWrapGrid"
                                MaximumRowsOrColumns="3"
                                Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </GridView.ItemsPanel>

                </GridView>
            </StackPanel>

            <controls:ControlExample.Options>
                <StackPanel>
                    <StackPanel.Resources>
                        <Style x:Key="DefaultNumberBoxStyle" TargetType="NumberBox">
                            <Setter Property="SpinButtonPlacementMode" Value="Inline" />
                            <Setter Property="SmallChange" Value="1" />
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="MaxWidth" Value="250" />
                            <Setter Property="Margin" Value="0,0,0,16" />
                        </Style>
                    </StackPanel.Resources>

                    <NumberBox
                        x:Name="ColumnSpace"
                        AutomationProperties.Name="Space between columns"
                        Header="Space between columns"
                        Maximum="100"
                        Minimum="0"
                        Style="{ThemeResource DefaultNumberBoxStyle}"
                        ValueChanged="NumberBox_ValueChanged"
                        Value="5" />

                    <NumberBox
                        x:Name="RowSpace"
                        AutomationProperties.Name="Space between rows"
                        Header="Space between rows"
                        Maximum="100"
                        Minimum="0"
                        Style="{ThemeResource DefaultNumberBoxStyle}"
                        ValueChanged="NumberBox_ValueChanged"
                        Value="5" />

                    <NumberBox
                        x:Name="WrapItemCount"
                        AutomationProperties.Name="Maximum number of items before wrapping"
                        Header="Maximum number of items before wrapping"
                        Maximum="8"
                        Minimum="1"
                        Style="{ThemeResource DefaultNumberBoxStyle}"
                        ValueChanged="NumberBox_ValueChanged"
                        Value="3" />

                </StackPanel>
            </controls:ControlExample.Options>
            <controls:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;!-- The GridView used for this example is shown below. Setter properties are used to customize 
some parts of the GridViewItems (i.e. the margins). --&gt;
&lt;GridView
    x:Name="StyledGrid"
    ItemTemplate="{StaticResource ImageOverlayTemplate}"&gt;

    &lt;GridView.ItemContainerStyle&gt;
        &lt;Style TargetType="GridViewItem" BasedOn="{StaticResource DefaultGridViewItemStyle}"&gt;
            &lt;Setter Property="Margin" Value="$(ColMargin), $(RowMargin), $(ColMargin), $(RowMargin)"/&gt;
        &lt;/Style&gt;
    &lt;/GridView.ItemContainerStyle&gt;
                    
    &lt;!-- An extra property also needs to be added to the GridView's ItemsWrapGrid. 
    The following sets the maximum # of items to show before wrapping.--&gt;
    &lt;GridView.ItemsPanel&gt;
        &lt;ItemsPanelTemplate&gt;
            &lt;ItemsWrapGrid x:Name="MaxItemsWrapGrid" 
                           MaximumRowsOrColumns="$(MaxItems)" 
                           Orientation="Horizontal"/&gt;
        &lt;/ItemsPanelTemplate&gt;
    &lt;/GridView.ItemsPanel&gt;                  
&lt;/GridView&gt;      
                    
&lt;!-- In this example, the GridView's ItemTemplate property is bound to a data template (shown below)
called ImageOverlayTemplate, defined in the Page.Resources section of the XAML file. 
                    
The data template is defined to display a CustomDataObject object (same type as in above sample). --&gt;
                    
&lt;DataTemplate x:Name="ImageOverlayTemplate" x:DataType="local:CustomDataObject"&gt;
    &lt;Grid Width="100"&gt;
        &lt;Image Source="{x:Bind ImageLocation}" Stretch="UniformToFill"/&gt;
        &lt;StackPanel Orientation="Vertical" Height="40" VerticalAlignment="Bottom" Padding="5,1,5,1" 
                    Background="LightGray" Opacity=".75"&gt;
            &lt;TextBlock Text="{x:Bind Title}"/&gt;
            &lt;StackPanel Orientation="Horizontal"&gt;
                &lt;TextBlock Text="{x:Bind Likes}" Style="{ThemeResource CaptionTextBlockStyle}" 
                           Foreground="{ThemeResource SystemControlPageTextBaseMediumBrush}"/&gt;
                &lt;TextBlock Text=" Likes" Style="{ThemeResource CaptionTextBlockStyle}" 
                           Foreground="{ThemeResource SystemControlPageTextBaseMediumBrush}"/&gt;
            &lt;/StackPanel&gt;
        &lt;/StackPanel&gt;
    &lt;/Grid&gt;
&lt;/DataTemplate&gt;
                </x:String>
            </controls:ControlExample.Xaml>
            <controls:ControlExample.Substitutions>
                <controls:ControlExampleSubstitution Key="ColMargin" Value="{x:Bind ColumnSpace.Value, Mode=OneWay}" />
                <controls:ControlExampleSubstitution Key="RowMargin" Value="{x:Bind RowSpace.Value, Mode=OneWay}" />
                <controls:ControlExampleSubstitution Key="MaxItems" Value="{x:Bind WrapItemCount.Value, Mode=OneWay}" />
            </controls:ControlExample.Substitutions>
        </controls:ControlExample>

        <controls:ControlExample HeaderText="Content inside of a GridView.">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <GridView
                    x:Name="ContentGridView"
                    AllowDrop="{x:Bind DropCheckBox.IsChecked.Value, Mode=OneWay}"
                    CanDragItems="{x:Bind DragCheckBox.IsChecked.Value, Mode=OneWay}"
                    CanReorderItems="{x:Bind ReorderCheckBox.IsChecked.Value, Mode=OneWay}"
                    FlowDirection="LeftToRight"
                    IsItemClickEnabled="{x:Bind ItemClickCheckBox.IsChecked.Value, Mode=OneWay}"
                    ItemClick="ContentGridView_ItemClick"
                    ItemTemplate="{StaticResource ImageTemplate}"
                    SelectionChanged="ContentGridView_SelectionChanged" />

                <StackPanel Grid.Row="1">
                    <TextBlock x:Name="ClickOutput" Style="{StaticResource OutputTextBlockStyle}" />
                    <TextBlock x:Name="SelectionOutput" Style="{StaticResource OutputTextBlockStyle}" />
                </StackPanel>

            </Grid>
            <controls:ControlExample.Options>
                <StackPanel x:Name="Control2">
                    <RadioButtons Header="ItemTemplate">
                        <RadioButton
                            Checked="ItemTemplate_Checked"
                            Content="Image"
                            GroupName="Template"
                            IsChecked="True"
                            Tag="ImageTemplate" />
                        <RadioButton
                            Checked="ItemTemplate_Checked"
                            Content="Icon/Text"
                            GroupName="Template"
                            Tag="IconTextTemplate" />
                        <RadioButton
                            Checked="ItemTemplate_Checked"
                            Content="Image/Text"
                            GroupName="Template"
                            Tag="ImageTextTemplate" />
                        <RadioButton
                            Checked="ItemTemplate_Checked"
                            Content="Text"
                            GroupName="Template"
                            Tag="TextTemplate" />
                    </RadioButtons>
                    <StackPanel>
                        <ToggleButton
                            Margin="0,8,0,0"
                            Click="FlowDirectionCheckBox_Click"
                            Content="Reverse FlowDirection" />
                        <TextBlock Margin="0,18,0,10" Text="GridView Properties" />
                        <TextBlock
                            MaxWidth="150"
                            FontSize="13"
                            TextWrapping="Wrap">
                            In order to drag, drop, and reorder items within the GridView, make sure the last three boxes are checked below.<LineBreak /></TextBlock>
                        <TextBlock
                            MaxWidth="150"
                            FontSize="13"
                            TextWrapping="Wrap">
                            Turning on IsItemClickEnabled will allow the user to click on an item (and print output below the GridView), regardless of selection mode.<LineBreak /></TextBlock>
                        <CheckBox
                            x:Name="ItemClickCheckBox"
                            Click="ItemClickCheckBox_Click"
                            Content="IsItemClickEnabled" />
                        <CheckBox x:Name="DragCheckBox" Content="CanDragItems" />
                        <CheckBox x:Name="ReorderCheckBox" Content="CanReorderItems" />
                        <CheckBox x:Name="DropCheckBox" Content="AllowDrop" />
                        <ComboBox
                            Margin="0,12,0,0"
                            Header="SelectionMode"
                            SelectedIndex="1"
                            SelectionChanged="SelectionModeComboBox_SelectionChanged">
                            <x:String>None</x:String>
                            <x:String>Single</x:String>
                            <x:String>Multiple</x:String>
                            <x:String>Extended</x:String>
                        </ComboBox>
                    </StackPanel>
                </StackPanel>
            </controls:ControlExample.Options>
            <controls:ControlExample.Xaml>
                <x:String xml:space="preserve">

&lt;!-- The GridView used for this sample is shown below, with all of the necessary added properties. --&gt;
&lt;GridView 
    x:Name="ContentGridView"
    ItemsSource="{x:Bind Items}"
    ItemTemplate="{StaticResource $(ItemTemplate)}"
    IsItemClickEnabled="$(IsItemClickEnabled)"
    CanDragItems="$(CanDragItems)"
    AllowDrop="$(CanDropItems)"
    CanReorderItems="$(CanReorderItems)"
    SelectionMode="$(SelectionMode)"
    SelectionChanged="ContentGridView_SelectionChanged"
    ItemClick="ContentGridView_ItemClick" 
    FlowDirection="$(FlowDirection)"/&gt;

&lt;!-- ContentGridView_SelectionChanged and ContentGridView_ItemClick are functions defined in the code-behind
to handle the events of when a selection changes on the GridView and when an item is clicked. --&gt;
                    
&lt;!-- The data template bound to this GridView's ItemTemplate property is based on which one you
select from the options on the right. The currently selected DataTemplate is: --&gt;

$(DisplayDT)
                </x:String>
            </controls:ControlExample.Xaml>
            <controls:ControlExample.Substitutions>
                <controls:ControlExampleSubstitution
                    Key="ItemTemplate"
                    x:Name="itemTemplate"
                    Value="ImageTemplate" />
                <controls:ControlExampleSubstitution Key="IsItemClickEnabled" Value="{x:Bind ContentGridView.IsItemClickEnabled, Mode=OneWay}" />
                <controls:ControlExampleSubstitution Key="CanDragItems" Value="{x:Bind ContentGridView.CanDragItems, Mode=OneWay}" />
                <controls:ControlExampleSubstitution Key="CanDropItems" Value="{x:Bind ContentGridView.AllowDrop, Mode=OneWay}" />
                <controls:ControlExampleSubstitution Key="CanReorderItems" Value="{x:Bind ContentGridView.CanReorderItems, Mode=OneWay}" />
                <controls:ControlExampleSubstitution Key="SelectionMode" Value="{x:Bind ContentGridView.SelectionMode, Mode=OneWay}" />
                <controls:ControlExampleSubstitution Key="FlowDirection" Value="{x:Bind ContentGridView.FlowDirection, Mode=OneWay}" />
                <controls:ControlExampleSubstitution Key="DisplayDT" x:Name="DisplayDT" />

            </controls:ControlExample.Substitutions>
        </controls:ControlExample>
    </StackPanel>
</pages:ItemsPageBase>
