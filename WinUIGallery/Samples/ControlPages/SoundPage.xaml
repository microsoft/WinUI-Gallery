<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="WinUIGallery.ControlPages.SoundPage" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:WinUIGallery"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <StackPanel>
        <local:ControlExample x:Name="Example1" HeaderText="Toggling Sound">
            <ToggleSwitch x:Name="soundToggle" OffContent="Sound Off" OnContent="Sound On" Toggled="soundToggle_Toggled"/>
            <local:ControlExample.CSharp>
                <x:String xml:space="preserve">
ElementSoundPlayer.State = ElementSoundPlayerState.Off;
ElementSoundPlayer.State = ElementSoundPlayerState.On;
                </x:String>
            </local:ControlExample.CSharp>
        </local:ControlExample>
        <local:ControlExample x:Name="Example2" HeaderText="Toggling Spatial Audio">
            <StackPanel Orientation="Vertical">
                <CheckBox x:Name="spatialAudioBox" IsEnabled="False" Content="Enable Spatial Audio" Checked="spatialAudioBox_Checked" Unchecked="spatialAudioBox_Unchecked"/>
                <TextBlock Margin="0,5,0,0" Text="Can only enable spatial audio when sound is on!" Foreground="{ThemeResource SystemColorHotlightColor}" Style="{ThemeResource CaptionTextBlockStyle}" FontStyle="Italic"/>
            </StackPanel>
            <local:ControlExample.CSharp>
                <x:String xml:space="preserve">
ElementSoundPlayer.State = ElementSoundPlayerState.On;
ElementSoundPlayer.SpatialAudioMode = ElementSpatialAudioMode.On
                </x:String>
            </local:ControlExample.CSharp>
        </local:ControlExample>
        <local:ControlExample x:Name="Example3" HeaderText="Play Specific System Sound">
            <StackPanel Orientation="Vertical" Spacing="5">
                <Button Content="&#x25B6; Focus" ElementSoundMode="Off" Tag="0" Click="Button_Click"/>
                <Button Content="&#x25B6; Invoke" ElementSoundMode="Off" Tag="1" Click="Button_Click"/>
                <Button Content="&#x25B6; Show" ElementSoundMode="Off" Tag="2" Click="Button_Click"/>
                <Button Content="&#x25B6; Hide" ElementSoundMode="Off" Tag="3" Click="Button_Click"/>
                <Button Content="&#x25B6; MovePrevious" ElementSoundMode="Off" Tag="4" Click="Button_Click"/>
                <Button Content="&#x25B6; MoveNext" ElementSoundMode="Off" Tag="5" Click="Button_Click"/>
                <Button Content="&#x25B6; GoBack" ElementSoundMode="Off" Tag="6" Click="Button_Click"/>
            </StackPanel>
 
            <local:ControlExample.CSharp>
                <x:String xml:space="preserve">
ElementSoundPlayer.State = ElementSoundPlayerState.On;

ElementSoundPlayer.Play(ElementSoundKind.Focus);
ElementSoundPlayer.Play(ElementSoundKind.Invoke);
ElementSoundPlayer.Play(ElementSoundKind.Show);
ElementSoundPlayer.Play(ElementSoundKind.Hide);
ElementSoundPlayer.Play(ElementSoundKind.MovePrevious);
ElementSoundPlayer.Play(ElementSoundKind.MoveNext);
ElementSoundPlayer.Play(ElementSoundKind.GoBack);
                </x:String>
            </local:ControlExample.CSharp>
        </local:ControlExample>
    </StackPanel>
</Page>
