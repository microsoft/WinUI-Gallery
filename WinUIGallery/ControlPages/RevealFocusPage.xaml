<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page x:Class="WinUIGallery.ControlPages.RevealFocusPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:WinUIGallery"
      xmlns:local2="using:WinUIGallery.ControlPages"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      mc:Ignorable="d">

    <StackPanel  XYFocusKeyboardNavigation="Enabled">
        <StackPanel.Resources>
            <SolidColorBrush x:Key="SystemControlRevealFocusVisualBrush" Color="{ThemeResource SystemAccentColorLight1}"/>

            <Style x:Key="ButtonRevealCustomStyle" TargetType="Button" BasedOn="{StaticResource ButtonRevealStyle}">
                <Setter Target="Width" Value="100"/>
                <Setter Target="Height" Value="100"/>
                <Setter Target="VerticalAlignment" Value="Center"/>
                <Setter Target="Margin" Value="10"/>
            </Style>

            <Flyout x:Key="myPrimaryColorPickerFlyout">
                <RelativePanel>
                    <ColorPicker x:Name="myPrimaryColorPicker"
                         IsColorChannelTextInputVisible="False"
                         IsHexInputVisible="False"/>

                    <Grid RelativePanel.Below="myPrimaryColorPicker"
                          RelativePanel.AlignLeftWithPanel="True"
                          RelativePanel.AlignRightWithPanel="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button Content="Close" Click="confirmColor_Click"
                        Margin="0,12,2,0" HorizontalAlignment="Stretch"/>
                    </Grid>
                </RelativePanel>
            </Flyout>

            <Flyout x:Key="mySecondaryColorPickerFlyout">
                <RelativePanel>
                    <ColorPicker x:Name="mySecondaryColorPicker"
                         IsColorChannelTextInputVisible="False"
                         IsHexInputVisible="False"
                                 Color="{StaticResource SystemBaseHighColor}"/>

                    <Grid RelativePanel.Below="mySecondaryColorPicker"
                          RelativePanel.AlignLeftWithPanel="True"
                          RelativePanel.AlignRightWithPanel="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button Content="Close" Click="confirmColor_Click"
                        Margin="0,12,2,0" HorizontalAlignment="Stretch"/>
                    </Grid>
                </RelativePanel>
            </Flyout>
        </StackPanel.Resources>

        <TextBlock Margin="0,16,0,0">
            Use the TAB key on your keyboard in the page below to see the focus visuals.
        </TextBlock>

        <local:ControlExample x:Name="Example1" HeaderText="Change the appearance of the focus rectangle.">

            <StackPanel Orientation="Horizontal">
                <Button Style="{StaticResource ButtonRevealCustomStyle}" AutomationProperties.Name="Square 1"/>
                <Button Style="{StaticResource ButtonRevealCustomStyle}" AutomationProperties.Name="Square 2"/>
                <Button Style="{StaticResource ButtonRevealCustomStyle}" AutomationProperties.Name="Square 3"/>
            </StackPanel>

            <local:ControlExample.Options>
                <RadioButtons Header="FocusVisualKind:">
                    <RadioButton x:Name="HighVisibility" Content="High Visibility" Checked="HighVisibility_Checked"/>
                    <RadioButton x:Name="RevealFocus" Content="Reveal Focus"  Checked="RevealFocus_Checked"/>
                </RadioButtons>
            </local:ControlExample.Options>
            <local:ControlExample.Xaml>
                <x:String>
                    &lt;Application FocusVisualKind="$(FocusVisualKind)"/&gt;
                </x:String>
            </local:ControlExample.Xaml>
            <local:ControlExample.Substitutions>
                <local:ControlExampleSubstitution x:Name="FocusVisualKindSubstitution" Key="FocusVisualKind" Value="HighVisibility" IsEnabled="True"/>
            </local:ControlExample.Substitutions>
        </local:ControlExample>

        <TextBlock Margin="0,16,0,0" TextWrapping="WrapWholeWords">
            <Bold>NOTE:</Bold> Choosing the <Bold>Reveal Focus</Bold> radio button will change the focus visuals that "UseSystemFocusVisuals" in the entire WinUI Gallery app.
            Reveal focus should be used on Xbox only. Apps should use high visibility focus rectangles across all other form factors.
        </TextBlock>

        <local:ControlExample x:Name="Example2" HeaderText="Change the size of the focus rectangle." ActualThemeChanged="Example2_ActualThemeChanged">

            <StackPanel>
                <StackPanel Orientation="Horizontal">
                    <Button x:Name="exampleButton" 
                        AutomationProperties.Name="Square 4"
                        Style="{StaticResource ButtonRevealCustomStyle}"
                        FocusVisualMargin="{x:Bind local2:MyConverters.IntToThickness(marginSlider.Value), Mode=OneWay}"
                        FocusVisualPrimaryThickness="{x:Bind local2:MyConverters.IntToThickness(primarySlider.Value), Mode=OneWay}"
                        FocusVisualSecondaryThickness="{x:Bind local2:MyConverters.IntToThickness(secondarySlider.Value), Mode=OneWay}"
                        FocusVisualPrimaryBrush="{x:Bind local2:MyConverters.ColorToBrush(myPrimaryColorPicker.Color), Mode=OneWay}"
                        FocusVisualSecondaryBrush="{x:Bind local2:MyConverters.ColorToBrush(mySecondaryColorPicker.Color), Mode=OneWay}" />
                    <Button
                        Style="{StaticResource ButtonRevealCustomStyle}"
                        AutomationProperties.Name="Square 5"
                        FocusVisualMargin="{x:Bind local2:MyConverters.IntToThickness(marginSlider.Value), Mode=OneWay}"
                        FocusVisualPrimaryThickness="{x:Bind local2:MyConverters.IntToThickness(primarySlider.Value), Mode=OneWay}"
                        FocusVisualSecondaryThickness="{x:Bind local2:MyConverters.IntToThickness(secondarySlider.Value), Mode=OneWay}"
                        FocusVisualPrimaryBrush="{x:Bind local2:MyConverters.ColorToBrush(myPrimaryColorPicker.Color), Mode=OneWay}"
                        FocusVisualSecondaryBrush="{x:Bind local2:MyConverters.ColorToBrush(mySecondaryColorPicker.Color), Mode=OneWay}" />
                    <Button
                        Style="{StaticResource ButtonRevealCustomStyle}"
                        AutomationProperties.Name="Square 6"
                        FocusVisualMargin="{x:Bind local2:MyConverters.IntToThickness(marginSlider.Value), Mode=OneWay}"
                        FocusVisualPrimaryThickness="{x:Bind local2:MyConverters.IntToThickness(primarySlider.Value), Mode=OneWay}"
                        FocusVisualSecondaryThickness="{x:Bind local2:MyConverters.IntToThickness(secondarySlider.Value), Mode=OneWay}"
                        FocusVisualPrimaryBrush="{x:Bind local2:MyConverters.ColorToBrush(myPrimaryColorPicker.Color), Mode=OneWay}"
                        FocusVisualSecondaryBrush="{x:Bind local2:MyConverters.ColorToBrush(mySecondaryColorPicker.Color), Mode=OneWay}" />
                </StackPanel>

                <TextBox MinWidth="300" Margin="0,16,0,0" AutomationProperties.Name="Sample textBox"
                    FocusVisualMargin="{x:Bind local2:MyConverters.IntToThickness(marginSlider.Value), Mode=OneWay}"
                    FocusVisualPrimaryThickness="{x:Bind local2:MyConverters.IntToThickness(primarySlider.Value), Mode=OneWay}"
                    FocusVisualSecondaryThickness="{x:Bind local2:MyConverters.IntToThickness(secondarySlider.Value), Mode=OneWay}"
                    FocusVisualPrimaryBrush="{x:Bind local2:MyConverters.ColorToBrush(myPrimaryColorPicker.Color), Mode=OneWay}"
                    FocusVisualSecondaryBrush="{x:Bind local2:MyConverters.ColorToBrush(mySecondaryColorPicker.Color), Mode=OneWay}"
                         />

                <ComboBox MinWidth="300" Margin="0,16,0,0" 
                          AutomationProperties.Name="Sample"
                          SelectedIndex="0"
                          FocusVisualMargin="{x:Bind local2:MyConverters.IntToThickness(marginSlider.Value), Mode=OneWay}"
                          FocusVisualPrimaryThickness="{x:Bind local2:MyConverters.IntToThickness(primarySlider.Value), Mode=OneWay}"
                          FocusVisualSecondaryThickness="{x:Bind local2:MyConverters.IntToThickness(secondarySlider.Value), Mode=OneWay}"
                          FocusVisualPrimaryBrush="{x:Bind local2:MyConverters.ColorToBrush(myPrimaryColorPicker.Color), Mode=OneWay}"
                          FocusVisualSecondaryBrush="{x:Bind local2:MyConverters.ColorToBrush(mySecondaryColorPicker.Color), Mode=OneWay}">
                    <ComboBoxItem>Apples</ComboBoxItem>
                    <ComboBoxItem>Bananas</ComboBoxItem>
                    <ComboBoxItem>Oranges</ComboBoxItem>
                    <ComboBoxItem>Strawberries</ComboBoxItem>
                </ComboBox>

                <RatingControl Margin="5,16,0,0"
                    AutomationProperties.Name="sample ratingControl"
                    FocusVisualMargin="{x:Bind local2:MyConverters.IntToThickness(marginSlider.Value), Mode=OneWay}"
                    FocusVisualPrimaryThickness="{x:Bind local2:MyConverters.IntToThickness(primarySlider.Value), Mode=OneWay}"
                    FocusVisualSecondaryThickness="{x:Bind local2:MyConverters.IntToThickness(secondarySlider.Value), Mode=OneWay}"
                    FocusVisualPrimaryBrush="{x:Bind local2:MyConverters.ColorToBrush(myPrimaryColorPicker.Color), Mode=OneWay}"
                    FocusVisualSecondaryBrush="{x:Bind local2:MyConverters.ColorToBrush(mySecondaryColorPicker.Color), Mode=OneWay}"/>

                <Slider MinWidth="300" Margin="5,16,0,0" IsFocusEngagementEnabled="True" 
                    AutomationProperties.Name="Sample"
                    FocusVisualMargin="{x:Bind local2:MyConverters.IntToThickness(marginSlider.Value), Mode=OneWay}"
                    FocusVisualPrimaryThickness="{x:Bind local2:MyConverters.IntToThickness(primarySlider.Value), Mode=OneWay}"
                    FocusVisualSecondaryThickness="{x:Bind local2:MyConverters.IntToThickness(secondarySlider.Value), Mode=OneWay}"
                    FocusVisualPrimaryBrush="{x:Bind local2:MyConverters.ColorToBrush(myPrimaryColorPicker.Color), Mode=OneWay}"
                    FocusVisualSecondaryBrush="{x:Bind local2:MyConverters.ColorToBrush(mySecondaryColorPicker.Color), Mode=OneWay}"/>

                <TimePicker MinWidth="300" Margin="5,16,0,0" AutomationProperties.Name="Sample TimePicker"/>

            </StackPanel>

            <local:ControlExample.Options>
                <StackPanel>
                    <Slider x:Name="primarySlider" Header="Primary Thickness" MinWidth="50" Minimum="0"  Maximum="10" Value="2"/>
                    <Slider x:Name="secondarySlider" Header="Secondary Thickness" MinWidth="50" Minimum="0"  Maximum="10" Value="1"/>
                    <Slider x:Name="marginSlider" Header="Margin" MinWidth="50" Minimum="-20"  Maximum="20" Value="-3"/>
                    <Button Content="Reset margin" Click="Button_Click" Margin="0,10"/>
                    <Button Content="Move keyboard focus" Margin="0,24" Click="MoveFocusBtn_Click"/>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <TextBlock
                            Text="Primary focus color:"
                            VerticalAlignment="Center"/>
                        <Button x:Name="primaryColorPickerButton"
                                Grid.Column="1"
                                AutomationProperties.Name="{x:Bind myPrimaryColorPicker.Color}"
                                Background="{x:Bind local2:MyConverters.ColorToBrush(myPrimaryColorPicker.Color), Mode=OneWay}"
                                Flyout="{StaticResource myPrimaryColorPickerFlyout}"
                                Height="40"
                                Width="40"
                                Margin="10"
                                HorizontalAlignment="Right"/>

                        <TextBlock Grid.Row="1"
                            Text="Secondary focus color:"
                            VerticalAlignment="Center"/>
                        <Button x:Name="secondaryColorPickerButton" 
                                Grid.Column="1" Grid.Row="1"
                                AutomationProperties.Name="{x:Bind myPrimaryColorPicker.Color}"
                                Background="{x:Bind local2:MyConverters.ColorToBrush(mySecondaryColorPicker.Color), Mode=OneWay}"
                                Flyout="{StaticResource mySecondaryColorPickerFlyout}"
                                Height="40"
                                Width="40"
                                Margin="10"
                                HorizontalAlignment="Right"/>
                    </Grid>
                </StackPanel>

            </local:ControlExample.Options>
            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;Grid.Resources&gt;
          &lt;SolidColorBrush x:Key="$(PrimaryColorKey)" Color="$(PrimaryColor)" /&gt;
          &lt;SolidColorBrush x:Key="SystemControlFocusVisualSecondaryBrush" Color="$(SecondaryColor)" /&gt;
&lt;/Grid.Resources&gt;
&lt;Button Width="100" Height="100"
          FocusVisualPrimaryThickness="$(PrimaryThickness)"
          FocusVisualSecondaryThickness="$(SecondaryThickness)"
          FocusVisualMargin="$(Margin)"
          FocusVisualPrimaryBrush="$(PrimaryBrush)"
          FocusVisualSecondaryBrush="{StaticResource SystemControlFocusVisualSecondaryBrush}" /&gt;
                </x:String>
            </local:ControlExample.Xaml>
            <local:ControlExample.Substitutions>
                <local:ControlExampleSubstitution x:Name="primaryColorKeyText" Key="PrimaryColorKey" />
                <local:ControlExampleSubstitution Key="PrimaryColor" Value="{x:Bind myPrimaryColorPicker.Color, Mode=OneWay}" />
                <local:ControlExampleSubstitution Key="SecondaryColor" Value="{x:Bind mySecondaryColorPicker.Color, Mode=OneWay}" />
                <local:ControlExampleSubstitution Key="PrimaryThickness" Value="{x:Bind primarySlider.Value, Mode=OneWay}" />
                <local:ControlExampleSubstitution Key="SecondaryThickness" Value="{x:Bind secondarySlider.Value, Mode=OneWay}" />
                <local:ControlExampleSubstitution Key="Margin" Value="{x:Bind marginSlider.Value, Mode=OneWay}" />
                <local:ControlExampleSubstitution x:Name="primaryBrushText" Key="PrimaryBrush" />
            </local:ControlExample.Substitutions>
        </local:ControlExample>
        <TextBlock Margin="0,16,0,0">
            <Run>Notes:</Run>
            The reveal glow will scale proportionally to the size of the <Bold>FocusVisualPrimaryThickness</Bold>.
        </TextBlock>
    </StackPanel>
</Page>
