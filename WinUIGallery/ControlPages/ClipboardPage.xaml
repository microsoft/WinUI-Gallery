<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->

<Page x:Class="AppUIBasics.ControlPages.ClipboardPage"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:AppUIBasics"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
    <StackPanel>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="ConfirmClipboardGroups">
                <VisualState x:Name="ConfirmationClipboardCollapsed">
                    <VisualState.Setters>
                        <Setter Target="ConfirmationTextBlock.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ConfirmationClipboardVisible">
                    <VisualState.Setters>
                        <Setter Target="ConfirmationTextBlock.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!--COPY TO CLIPBOARD-->
        <local:ControlExample x:Name="Example1" HeaderText="Copy text to the Clipboard">

            <StackPanel VerticalAlignment="Top">
                <StackPanel Orientation="Horizontal">
                    <Button Content="Copy Text to the Clipboard"
        Click="CopyText_Click" Margin="0,0,0,10"/>
                    <TextBlock x:Name="ConfirmationTextBlock" Text="Text copied to clipboard!" Visibility="Collapsed" Padding="20,5,0,0"/>
                </StackPanel>

                <RichEditBox x:Name="richEditBox"    
                    AutomationProperties.Name="editor with custom menu"
                    Width="800" Height="100" />
            </StackPanel>

            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">

&lt;Button Content="Copy Text to the Clipboard" Click="CopyText_Click"/&gt;

                </x:String>
            </local:ControlExample.Xaml>
            <local:ControlExample.CSharp>
                <x:String xml:space="preserve">
private void CopyText_Click(object sender, RoutedEventArgs args)
{
	var package = new DataPackage();
	package.SetText("Copy this text");
	Clipboard.SetContent(package);
}
                </x:String>
            </local:ControlExample.CSharp>
        </local:ControlExample>

        <!--PASTE FROM CLIPBOARD-->
        <local:ControlExample x:Name="Example2" HeaderText="Paste text from the Clipboard">
                <StackPanel VerticalAlignment="Top">
                    <Button Content="Paste Text from the Clipboard"
                            Click="PasteText_Click" Margin="0,0,0,10"/>
                    <TextBlock x:Name="PasteClipboard1" Visibility="Visible" Padding="5,5,0,0">
                    <Underline>Clipboard:</Underline> 
                    </TextBlock>
                    <TextBlock x:Name="PasteClipboard2" Text="Click the button!" Visibility="Visible" Padding="5,5,0,0"
                               Width = "Auto" TextWrapping = "Wrap"/>
                </StackPanel>

            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">

&lt;Button Content="Paste Text from the Clipboard" Click="PasteText_Click"/&gt;

                </x:String>
            </local:ControlExample.Xaml>
            <local:ControlExample.CSharp>
                <x:String xml:space="preserve">
private async void PasteText_Click(object sender, RoutedEventArgs args)
{
	var package = Clipboard.GetContent();
	if (package.Contains(StandardDataFormats.Text))
	{
		var text = await package.GetTextAsync();
	}
}
                </x:String>
            </local:ControlExample.CSharp>
        </local:ControlExample>
        
    </StackPanel>
</Page>
