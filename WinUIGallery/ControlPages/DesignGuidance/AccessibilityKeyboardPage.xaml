<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="AppUIBasics.ControlPages.AccessibilityKeyboardPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="using:AppUIBasics"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Background="{ThemeResource HomePageBackgroundBrush}"
    mc:Ignorable="d">

    <Page.Resources>
        <Style x:Key="SubHeaderTextStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="0,24,0,0" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
        <Style x:Key="SampleExplanationTextStyle" TargetType="TextBlock">
            <Setter Property="FontStyle" Value="Italic" />
            <Setter Property="MaxWidth" Value="450" />
            <Setter Property="TextWrapping" Value="WrapWholeWords" />
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="TextWrapping" Value="WrapWholeWords" />
        </Style>
    </Page.Resources>

    <StackPanel
        MaxWidth="900"
        HorizontalAlignment="Left"
        Spacing="10">
        <RichTextBlock>
            <Paragraph>
                Accessibility is about building experiences that make your Windows application usable by people of
                all abilities. For more information about designing accessible apps:
                <Hyperlink NavigateUri="https://learn.microsoft.com/windows/apps/design/accessibility/accessibility-overview">Accessibility overview</Hyperlink> .
                <LineBreak />
                <LineBreak /> If your app does not provide good keyboard access, users who are blind or have mobility issues can have difficulty using your app or may not be able to use it at all.
                <LineBreak />
                <LineBreak /> To use the keyboard with a control, the control must have focus, and to receive focus (without using a pointer) the control must be accessible in a Ul design via tab navigation. Here is how you can override the default tab order:
            </Paragraph>
        </RichTextBlock>

        <core:ControlExample HeaderText="Controlling tab sequence">
            <core:ControlExample.Example>
                <Grid ColumnSpacing="8" RowSpacing="8">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        Grid.Column="1"
                        HorizontalAlignment="Center"
                        Text="Column 1" />
                    <TextBlock
                        Grid.Column="2"
                        HorizontalAlignment="Center"
                        Text="Column 2" />

                    <TextBlock
                        Grid.Row="1"
                        VerticalAlignment="Center"
                        Text="Row 1" />
                    <Button
                        Grid.Row="1"
                        Grid.Column="1"
                        Width="100"
                        Content="First stop"
                        TabIndex="1" />
                    <Button
                        Grid.Row="1"
                        Grid.Column="2"
                        Width="100"
                        Content="Second stop"
                        TabIndex="2" />

                    <TextBlock
                        Grid.Row="2"
                        VerticalAlignment="Center"
                        Text="Row 2" />
                    <Button
                        Grid.Row="2"
                        Grid.Column="1"
                        Width="100"
                        Content="Third stop"
                        TabIndex="3" />
                    <Button
                        Grid.Row="2"
                        Grid.Column="2"
                        Width="100"
                        Content="Not a stop"
                        IsTabStop="False" />
                </Grid>
            </core:ControlExample.Example>
            <core:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;Grid RowSpacing="8" ColumnSpacing="8"&gt;
&lt;Grid.RowDefinitions&gt;
	&lt;RowDefinition Height="Auto"/&gt;
	&lt;RowDefinition Height="Auto"/&gt;
	&lt;RowDefinition Height="Auto"/&gt;
&lt;/Grid.RowDefinitions&gt;
&lt;Grid.ColumnDefinitions&gt;
	&lt;ColumnDefinition Width="Auto"/&gt;
	&lt;ColumnDefinition Width="Auto"/&gt;
	&lt;ColumnDefinition Width="Auto"/&gt;
&lt;/Grid.ColumnDefinitions&gt;

&lt;TextBlock Grid.Column="1" HorizontalAlignment="Center" Text="Column 1"/&gt;
&lt;TextBlock Grid.Column="2" HorizontalAlignment="Center" Text="Column 2"/&gt;

&lt;TextBlock Grid.Row="1" VerticalAlignment="Center" Text="Row 1"/&gt;
&lt;Button Grid.Column="1" Grid.Row="1" Content="First stop" TabIndex="1" Width="100"/&gt;
&lt;Button Grid.Column="2" Grid.Row="1" Content="Second stop" TabIndex="2" Width="100"/&gt;

&lt;TextBlock Grid.Row="2" VerticalAlignment="Center" Text="Row 2"/&gt;
&lt;Button Grid.Column="1" Grid.Row="2" Content="Third stop" TabIndex="3" Width="100"/&gt;
&lt;Button Grid.Column="2" Grid.Row="2" Content="Not a stop" IsTabStop="False" Width="100"/&gt;
&lt;/Grid&gt;
                    </x:String>
            </core:ControlExample.Xaml>
        </core:ControlExample>

        <TextBlock Margin="0,20,0,0" Style="{ThemeResource SubtitleTextBlockStyle}" Text="Keyboard Shortcuts" />
        <TextBlock Text="It is imperative that you provide an easy way for users to discover your app's shortcut keys (e.g. using tooltips, accessible names, accessible descriptions, etc.)" />
        <core:ControlExample >
            <core:ControlExample.Example>
                <Grid ColumnSpacing="8" RowSpacing="8">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Rectangle
                        x:Name="ColorRectangle"
                        Grid.ColumnSpan="2"
                        Height="30"
                        Fill="Red"
                        RadiusX="4"
                        RadiusY="4" />

                    <Button
                        Grid.Row="1"
                        AutomationProperties.AcceleratorKey="R"
                        Click="MakeRedButton_Click"
                        Content="Red"
                        ToolTipService.ToolTip="Shortcut: Ctrl+R">
                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Key="R" Modifiers="Control" />
                        </Button.KeyboardAccelerators>
                    </Button>

                    <Button
                        Grid.Row="1"
                        Grid.Column="1"
                        AutomationProperties.AcceleratorKey="B"
                        Click="MakeBlueButton_Click"
                        Content="Blue"
                        ToolTipService.ToolTip="Shortcut: Ctrl+B">
                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Key="B" Modifiers="Control" />
                        </Button.KeyboardAccelerators>
                    </Button>

                    <TextBlock
                        Grid.Row="2"
                        Grid.ColumnSpan="3"
                        Style="{StaticResource SampleExplanationTextStyle}"
                        Text="Using KeyboardAccelarator and the AutomationProperties.AcceleratorKey property to create a shortcut. Accelerator keys consist of the Ctrl key + a letter key." />
                </Grid>
            </core:ControlExample.Example>

            <core:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;Grid ColumnSpacing="8" RowSpacing="8"&gt;
&lt;Grid.RowDefinitions&gt;
	&lt;RowDefinition Height="Auto" /&gt;
	&lt;RowDefinition Height="Auto" /&gt;
&lt;/Grid.RowDefinitions&gt;

&lt;Grid.ColumnDefinitions&gt;
	&lt;ColumnDefinition Width="Auto"/&gt;
	&lt;ColumnDefinition Width="Auto"/&gt;
&lt;/Grid.ColumnDefinitions&gt;

&lt;Rectangle x:Name="ColorRectangle" Fill="Red"
	Height="30" RadiusX="4" RadiusY="4"
	Grid.ColumnSpan="2"/&gt;

&lt;Button Click="MakeRedButton_Click" Content="Red" Grid.Row="1"
	AutomationProperties.AcceleratorKey="R"
	ToolTipService.ToolTip="Shortcut: Ctrl+R"&gt;
	&lt;Button.KeyboardAccelerators&gt;
		&lt;KeyboardAccelerator Modifiers="Control" Key="R" /&gt;
	&lt;/Button.KeyboardAccelerators&gt;
&lt;/Button&gt;
	
&lt;Button Click="MakeBlueButton_Click" Content="Blue"
	Grid.Row="1" Grid.Column="1"
	AutomationProperties.AcceleratorKey="B"
	ToolTipService.ToolTip="Shortcut: Ctrl+B"&gt;
	&lt;Button.KeyboardAccelerators&gt;
		&lt;KeyboardAccelerator Modifiers="Control" Key="B" /&gt;
	&lt;/Button.KeyboardAccelerators&gt;
&lt;/Button&gt;
&lt;/Grid&gt;
                </x:String>
            </core:ControlExample.Xaml>
            <core:ControlExample.CSharp>
                private void MakeRedButton_Click(object sender, RoutedEventArgs e)
                {
                ColorRectangle.Fill = new SolidColorBrush(Colors.Red);
                }
                private void MakeBlueButton_Click(object sender, RoutedEventArgs e)
                {
                ColorRectangle.Fill = new SolidColorBrush(Colors.Blue);
                }
            </core:ControlExample.CSharp>
        </core:ControlExample>

        <TextBlock Margin="0,20,0,0" Style="{ThemeResource SubtitleTextBlockStyle}" Text="Landmarks and headings" />
        <TextBlock>
            Landmarks and headings define sections of a user interface that aid in more efficient navigation for
            users of assistive technology (AT). Marking up the content into landmarks and headings provides a
            screen reader user the option to skim content similar to the way a sighted user would.
        </TextBlock>
        <core:ControlExample>
            <core:ControlExample.Example>
                <StackPanel>
                    <TextBlock TextWrapping="Wrap" Style="{StaticResource SampleExplanationTextStyle}" HorizontalAlignment="Left" Margin="0,0,0,10" Text="The sample below showcases landmarks." />
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <!--  The navigation pane for our app  -->
                        <StackPanel
                        Grid.Column="0"
                        Padding="6"
                        AutomationProperties.LandmarkType="Main"
                        Background="{ThemeResource CardStrokeColorDefaultBrush}"
                        Spacing="8">
                            <AutoSuggestBox AutomationProperties.LandmarkType="Search" PlaceholderText="Search" />
                            <Button Content="Open settings" />
                        </StackPanel>

                        <!--  The main content of our app  -->
                        <StackPanel
                        Grid.Column="1"
                        Padding="6"
                        AutomationProperties.LandmarkType="Main">
                            <TextBlock TextWrapping="WrapWholeWords">
                            Loren ipsum dolor sit anet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
                            Ut enim ad minim venian, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea cannodo consequat.
                            Duis aute irure dolor in reprehenderit in voluptate velit esse cilium dolore eu fugiat nulla pariatur.
                            Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborun
                            </TextBlock>
                        </StackPanel>
                    </Grid>
                </StackPanel>
            </core:ControlExample.Example>
            <core:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;Grid&gt;
&lt;Grid.ColumnDefinitions&gt;
	&lt;ColumnDefinition Width="200"/&gt;
	&lt;ColumnDefinition Width="*"/&gt;
&lt;/Grid.ColumnDefinitions&gt;

&lt;!-- The navigation pane for our app  --&gt;
&lt;StackPanel Grid.Column="0" AutomationProperties.LandmarkType="Main" Padding="6" Spacing="8"
	Background="{ThemeResource CardStrokeColorDefaultBrush}"&gt;
	&lt;AutoSuggestBox AutomationProperties.LandmarkType="Search" PlaceholderText="Search"/&gt;
	&lt;Button Content="Open settings"/&gt;
&lt;/StackPanel&lt;

&lt;!-- The main content of our app  --&gt;
&lt;StackPanel Grid.Column="1" AutomationProperties.LandmarkType="Main" Padding="6"&gt;
	&lt;TextBlock TextWrapping="WrapWholeWords"&gt;
		Loren ipsum dolor sit anet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
		Ut enim ad minim venian, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea cannodo consequat.
		Duis aute irure dolor in reprehenderit in voluptate velit esse cilium dolore eu fugiat nulla pariatur.
		Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborun
	&lt;/TextBlock&gt;
&lt;/StackPanel&gt;
&lt;/Grid&gt;
                    </x:String>
            </core:ControlExample.Xaml>
        </core:ControlExample>

        <core:ControlExample>
            <core:ControlExample.Example>
                <StackPanel HorizontalAlignment="Left">
                    <TextBlock TextWrapping="Wrap" Style="{StaticResource SampleExplanationTextStyle}" HorizontalAlignment="Left" Margin="0,0,0,10" Text="The sample below showcases headings." />
                    <StackPanel MaxWidth="500">
                        <!--  Here is the main header for the whole text. It gets HeadingLevel 1  -->
                        <TextBlock AutomationProperties.HeadingLevel="Level1" FontSize="26">Lorem ipsums</TextBlock>
                        <!--  The following TextBlock is the header for the standard lorem ipsum text, thus it is only HeadingLevel 2  -->
                        <TextBlock AutomationProperties.HeadingLevel="Level2" FontSize="22">Lorem ipsum</TextBlock>
                        <TextBlock TextWrapping="WrapWholeWords">
                            Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                            Pellentesque feugiat velit pulvinar, vehicula nisi at, molestie risus.
                            Duis consequat auctor libero vitae consectetur. Nullam efficitur euismod lacinia.
                        </TextBlock>

                        <TextBlock AutomationProperties.HeadingLevel="Level2" FontSize="22">Cat ipsum</TextBlock>
                        <!--  This is the header for the standard cat ipsum section, which is hierarchically below the cat ipsum header, resulting in HeadingLevel 3  -->
                        <TextBlock AutomationProperties.HeadingLevel="3" FontSize="18">Standard</TextBlock>
                        <TextBlock TextWrapping="WrapWholeWords">
                            Mice litter kitter kitty litty little kitten big roar roar feed me
                            but i will ruin the couch with my claws and hunt by meowing loudly at 5am next to human.
                        </TextBlock>
                        <TextBlock AutomationProperties.HeadingLevel="3" FontSize="18">Cat breeds</TextBlock>
                        <TextBlock TextWrapping="WrapWholeWords">
                            Tabby abyssinian for jaguar. Thai russian blue and ragdoll, ocicat.
                            Mouser puma so american bobtail for donskoy balinese . Scottish fold manx so siamese.
                        </TextBlock>

                        <TextBlock AutomationProperties.HeadingLevel="2" FontSize="22">Bacon ipsum</TextBlock>
                        <TextBlock TextWrapping="WrapWholeWords">
                            Bacon ipsum dolor amet meatball nulla labore,
                            tempor sirloin chicken frankfurter tail drumstick ex cupim ground round.
                        </TextBlock>
                    </StackPanel>
                </StackPanel>
            </core:ControlExample.Example>
            <core:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;StackPanel MaxWidth="500"&gt;
&lt;!-- Here is the main header for the whole text. It gets HeadingLevel 1 --&gt;
&lt;TextBlock AutomationProperties.HeadingLevel="Level1" FontSize="26"&gt;Lorem ipsums&lt;/TextBlock&gt;
&lt;!-- The following TextBlock is the header for the standard lorem ipsum text, thus it is only HeadingLevel 2--&gt;
&lt;TextBlock AutomationProperties.HeadingLevel="Level2" FontSize="22"&gt;Lorem ipsum&lt;/TextBlock&gt;
&lt;TextBlock TextWrapping="WrapWholeWords"&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. 
                Pellentesque feugiat velit pulvinar, vehicula nisi at, molestie risus. 
                Duis consequat auctor libero vitae consectetur. Nullam efficitur euismod lacinia.&lt;/TextBlock&gt;
    
&lt;TextBlock AutomationProperties.HeadingLevel="Level2" FontSize="22"&gt;Cat ipsum&lt;/TextBlock&gt;
&lt;!-- This is the header for the standard cat ipsum section, which is hierarchically below the cat ipsum header, resulting in HeadingLevel 3 --&gt;
&lt;TextBlock AutomationProperties.HeadingLevel="3" FontSize="18"&gt;Standard&lt;/TextBlock&gt;
&lt;TextBlock TextWrapping="WrapWholeWords">Mice litter kitter kitty litty little kitten big roar roar feed me 
                but i will ruin the couch with my claws and hunt by meowing loudly at 5am next to human.&lt;/TextBlock&gt;
&lt;TextBlock AutomationProperties.HeadingLevel="3" FontSize="18"&gt;Cat breeds&lt;/TextBlock&gt;
&lt;TextBlock TextWrapping="WrapWholeWords">Tabby abyssinian for jaguar. Thai russian blue and ragdoll, ocicat. 
                Mouser puma so american bobtail for donskoy balinese . Scottish fold manx so siamese.&lt;/TextBlock&gt;
    
&lt;TextBlock AutomationProperties.HeadingLevel="2" FontSize="22"&gt;Bacon ipsum&lt;/TextBlock&gt;
&lt;TextBlock TextWrapping="WrapWholeWords">Bacon ipsum dolor amet meatball nulla labore, 
                tempor sirloin chicken frankfurter tail drumstick ex cupim ground round.&lt;/TextBlock&gt;
&lt;/StackPanel&gt;
                </x:String>
            </core:ControlExample.Xaml>
        </core:ControlExample>
    </StackPanel>
</Page>
