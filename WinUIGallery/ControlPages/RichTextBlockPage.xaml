<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page x:Class="AppUIBasics.ControlPages.RichTextBlockPage"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:AppUIBasics"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
    <StackPanel>
        <local:ControlExample x:Name="Example1" HeaderText="A simple RichTextBlock.">
            <local:ControlExample.Example>
                <RichTextBlock>
                    <Paragraph>I am a RichTextBlock.</Paragraph>
                </RichTextBlock>
            </local:ControlExample.Example>
            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;RichTextBlock&gt;
    &lt;Paragraph&gt;I am a RichTextBlock.&lt;/Paragraph&gt;
&lt;/RichTextBlock&gt;
                </x:String>
            </local:ControlExample.Xaml>
        </local:ControlExample>
        <local:ControlExample x:Name="Example2" HeaderText="A RichTextBlock with a custom selection highlight color.">
            <local:ControlExample.Example>
                <RichTextBlock SelectionHighlightColor="Green">
                    <Paragraph>RichTextBlock provides a rich text display container that supports
                        <Run FontStyle="Italic" FontWeight="Bold">formatted text</Run> ,
                        <Hyperlink
                                NavigateUri="https://docs.microsoft.com/uwp/api/Windows.UI.Xaml.Documents.Hyperlink">hyperlinks</Hyperlink> , inline images, and other rich content.
                    </Paragraph>
                    <Paragraph>RichTextBlock also supports a built-in overflow model.</Paragraph>
                </RichTextBlock>
            </local:ControlExample.Example>
            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;RichTextBlock SelectionHighlightColor="Green"&gt;
    &lt;Paragraph&gt;RichTextBlock provides a rich text display container that supports
        &lt;Run FontStyle="Italic" FontWeight="Bold"&gt;formatted text&lt;/Run&gt;,
        &lt;Hyperlink NavigateUri="https://docs.microsoft.com/uwp/api/Windows.UI.Xaml.Documents.Hyperlink"&gt;hyperlinks&lt;/Hyperlink&gt;, inline images, and other rich content.&lt;/Paragraph&gt;
    &lt;Paragraph&gt;RichTextBlock also supports a built-in overflow model.&lt;/Paragraph&gt;
&lt;/RichTextBlock&gt;
                </x:String>
            </local:ControlExample.Xaml>
        </local:ControlExample>
        <local:ControlExample x:Name="Example3" HeaderText="A RichTextBlock with overflow."
                HorizontalContentAlignment="Stretch">
            <local:ControlExample.Example>
                <Grid Height="300">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <RichTextBlock Grid.Column="0" OverflowContentTarget="{x:Bind firstOverflowContainer}"
                            TextAlignment="Justify" Margin="12,0">
                        <Paragraph>Linked text containers allow text which does not fit in one element to overflow into a different element on the page. Creative use of linked text containers enables basic multicolumn support and other advanced page layouts.</Paragraph>
                        <Paragraph>Duis sed nulla metus, id hendrerit velit. Curabitur dolor purus, bibendum eu cursus lacinia, interdum vel augue. Aenean euismod eros et sapien vehicula dictum. Duis ullamcorper, turpis nec feugiat tincidunt, dui erat luctus risus, aliquam accumsan lacus est vel quam. Nunc lacus massa, varius eget accumsan id, congue sed orci. Duis dignissim hendrerit egestas. Proin ut turpis magna, sit amet porta erat. Nunc semper metus nec magna imperdiet nec vestibulum dui fringilla. Sed sed ante libero, nec porttitor mi. Ut luctus, neque vitae placerat egestas, urna leo auctor magna, sit amet ultricies ipsum felis quis sapien. Proin eleifend varius dui, at vestibulum nunc consectetur nec. Mauris nulla elit, ultrices a sodales non, aliquam ac est. Quisque sit amet risus nulla. Quisque vestibulum posuere velit, vitae vestibulum eros scelerisque sit amet. In in risus est, at laoreet dolor. Nullam aliquet pellentesque convallis. Ut vel tincidunt nulla. Mauris auctor tincidunt auctor.
              Aenean orci ante, vulputate ac sagittis sit amet, consequat at mi. Morbi elementum purus consectetur nisi adipiscing vitae blandit sapien placerat. Aliquam adipiscing tortor non sem lobortis consectetur mattis felis rhoncus. Nunc eu nunc rhoncus arcu sollicitudin ultrices. In vulputate eros in mauris aliquam id dignissim nisl laoreet.</Paragraph>
                    </RichTextBlock>
                    <RichTextBlockOverflow x:Name="firstOverflowContainer" Grid.Column="1"
                            OverflowContentTarget="{x:Bind secondOverflowContainer}" Margin="12,0" />
                    <RichTextBlockOverflow x:Name="secondOverflowContainer" Grid.Column="2" Margin="12,0" />
                </Grid>
            </local:ControlExample.Example>
            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;Grid&gt;
    &lt;Grid.ColumnDefinitions&gt;
        &lt;ColumnDefinition/&gt;
        &lt;ColumnDefinition/&gt;
        &lt;ColumnDefinition/&gt;
    &lt;Grid.ColumnDefinitions&gt;
    &lt;RichTextBlock Grid.Column="0" OverflowContentTarget="{x:Bind firstOverflowContainer}" TextAlignment="Justify" Margin="12,0"&gt;
        &lt;Paragraph&gt;
            Linked text containers allow text which does not fit in one element to overflow into a different element on the page.
            Creative use of linked text containers enables basic multicolumn support and other advanced page layouts.
        &lt;/Paragraph&gt;
    &lt;!-- Additional content not shown. --&gt;
    &lt;/RichTextBlock&gt;
    &lt;RichTextBlockOverflow x:Name="firstOverflowContainer" OverflowContentTarget="{x:Bind secondOverflowContainer}" Grid.Column="1" Margin="12,0"/&gt;
    &lt;RichTextBlockOverflow x:Name="secondOverflowContainer" Grid.Column="2" Margin="12,0"/&gt;
&lt;/Grid&gt;
                </x:String>
            </local:ControlExample.Xaml>
        </local:ControlExample>

        <local:ControlExample HeaderText="RichTextBlock with custom TextHighlighting">
            <local:ControlExample.Example>
                <RichTextBlock x:Name="TextHighlightingRichTextBlock">
                    <Paragraph>
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua
                    </Paragraph>
                </RichTextBlock>
            </local:ControlExample.Example>
            <local:ControlExample.Options>
                <StackPanel>
                    <ComboBox Header="Text highlighting color" SelectionChanged="HighlightColorCombobox_SelectionChanged">
                        <ComboBoxItem Content="Yellow" IsSelected="True"/>
                        <ComboBoxItem Content="Red"/>
                        <ComboBoxItem Content="Blue"/>
                    </ComboBox>
                </StackPanel>
            </local:ControlExample.Options>
            <local:ControlExample.Xaml>
                <x:String xml:space="preserve">
&lt;RichTextBlock x:Name="TextHighlightingRichTextBlock"&gt;
    &lt;Paragraph&gt;
        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua
    &lt;/Paragraph&gt;
&lt;/RichTextBlock&gt;
                </x:String>
            </local:ControlExample.Xaml>
            <local:ControlExample.CSharp>
                <x:String xml:space="preserve">
private void HighlightColorCombobox_SelectionChanged(object sender, SelectionChangedEventArgs e)
{
    // Get color to use
    var selectedItem = (sender as ComboBox).SelectedItem as ComboBoxItem;
    var color = Colors.Yellow;
    switch (selectedItem.Content as string)
    {
        case "Yellow":
            color = Colors.Yellow;
            break;
        case "Red":
            color = Colors.Red;
            break;
        case "Blue":
            color = Colors.Blue;
            break;
    }

    // Get text range and highlighter
    TextRange textRange = new TextRange()
    {
        StartIndex = 28,
        Length = 11
    };
    TextHighlighter highlighter = new TextHighlighter()
    {
        Background = new SolidColorBrush(color),
        Ranges = { textRange }
    };

    // Switch texthighlighter
    TextHighlightingRichTextBlock.TextHighlighters.Clear();
    TextHighlightingRichTextBlock.TextHighlighters.Add(highlighter);
}
                </x:String>
            </local:ControlExample.CSharp>
        </local:ControlExample>
    </StackPanel>
</Page>
